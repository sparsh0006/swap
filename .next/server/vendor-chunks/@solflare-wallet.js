"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@solflare-wallet";
exports.ids = ["vendor-chunks/@solflare-wallet"];
exports.modules = {

/***/ "(ssr)/./node_modules/@solflare-wallet/metamask-sdk/lib/esm/detectProvider.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/metamask-sdk/lib/esm/detectProvider.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   detectProvider: () => (/* binding */ detectProvider),\n/* harmony export */   isSnapSupported: () => (/* binding */ isSnapSupported)\n/* harmony export */ });\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nfunction isSnapSupported(provider) {\n    return __awaiter(this, void 0, void 0, function*() {\n        try {\n            yield provider.request({\n                method: \"wallet_getSnaps\"\n            });\n            return true;\n        } catch (error) {\n            return false;\n        }\n    });\n}\nfunction detectProvider() {\n    return __awaiter(this, void 0, void 0, function*() {\n        try {\n            const provider = window.ethereum;\n            if (!provider) {\n                return null;\n            }\n            if (provider.providers && Array.isArray(provider.providers)) {\n                const providers = provider.providers;\n                for (const provider of providers){\n                    if (yield isSnapSupported(provider)) {\n                        return provider;\n                    }\n                }\n            }\n            if (provider.detected && Array.isArray(provider.detected)) {\n                const providers = provider.detected;\n                for (const provider of providers){\n                    if (yield isSnapSupported(provider)) {\n                        return provider;\n                    }\n                }\n            }\n            if (yield isSnapSupported(provider)) {\n                return provider;\n            }\n            return null;\n        } catch (error) {\n            console.error(error);\n            return null;\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9tZXRhbWFzay1zZGsvbGliL2VzbS9kZXRlY3RQcm92aWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLElBQUlBLFlBQVksU0FBSyxJQUFJLFNBQUksQ0FBQ0EsU0FBUyxJQUFLLFNBQVVDLE9BQU8sRUFBRUMsVUFBVSxFQUFFQyxDQUFDLEVBQUVDLFNBQVM7SUFDbkYsU0FBU0MsTUFBTUMsS0FBSztRQUFJLE9BQU9BLGlCQUFpQkgsSUFBSUcsUUFBUSxJQUFJSCxFQUFFLFNBQVVJLE9BQU87WUFBSUEsUUFBUUQ7UUFBUTtJQUFJO0lBQzNHLE9BQU8sSUFBS0gsQ0FBQUEsS0FBTUEsQ0FBQUEsSUFBSUssT0FBTSxDQUFDLEVBQUcsU0FBVUQsT0FBTyxFQUFFRSxNQUFNO1FBQ3JELFNBQVNDLFVBQVVKLEtBQUs7WUFBSSxJQUFJO2dCQUFFSyxLQUFLUCxVQUFVUSxJQUFJLENBQUNOO1lBQVMsRUFBRSxPQUFPTyxHQUFHO2dCQUFFSixPQUFPSTtZQUFJO1FBQUU7UUFDMUYsU0FBU0MsU0FBU1IsS0FBSztZQUFJLElBQUk7Z0JBQUVLLEtBQUtQLFNBQVMsQ0FBQyxRQUFRLENBQUNFO1lBQVMsRUFBRSxPQUFPTyxHQUFHO2dCQUFFSixPQUFPSTtZQUFJO1FBQUU7UUFDN0YsU0FBU0YsS0FBS0ksTUFBTTtZQUFJQSxPQUFPQyxJQUFJLEdBQUdULFFBQVFRLE9BQU9ULEtBQUssSUFBSUQsTUFBTVUsT0FBT1QsS0FBSyxFQUFFVyxJQUFJLENBQUNQLFdBQVdJO1FBQVc7UUFDN0dILEtBQUssQ0FBQ1AsWUFBWUEsVUFBVWMsS0FBSyxDQUFDakIsU0FBU0MsY0FBYyxFQUFFLEdBQUdVLElBQUk7SUFDdEU7QUFDSjtBQUNPLFNBQVNPLGdCQUFnQkMsUUFBUTtJQUNwQyxPQUFPcEIsVUFBVSxJQUFJLEVBQUUsS0FBSyxHQUFHLEtBQUssR0FBRztRQUNuQyxJQUFJO1lBQ0EsTUFBTW9CLFNBQVNDLE9BQU8sQ0FBQztnQkFBRUMsUUFBUTtZQUFrQjtZQUNuRCxPQUFPO1FBQ1gsRUFDQSxPQUFPQyxPQUFPO1lBQ1YsT0FBTztRQUNYO0lBQ0o7QUFDSjtBQUNPLFNBQVNDO0lBQ1osT0FBT3hCLFVBQVUsSUFBSSxFQUFFLEtBQUssR0FBRyxLQUFLLEdBQUc7UUFDbkMsSUFBSTtZQUNBLE1BQU1vQixXQUFXSyxPQUFPQyxRQUFRO1lBQ2hDLElBQUksQ0FBQ04sVUFBVTtnQkFDWCxPQUFPO1lBQ1g7WUFDQSxJQUFJQSxTQUFTTyxTQUFTLElBQUlDLE1BQU1DLE9BQU8sQ0FBQ1QsU0FBU08sU0FBUyxHQUFHO2dCQUN6RCxNQUFNQSxZQUFZUCxTQUFTTyxTQUFTO2dCQUNwQyxLQUFLLE1BQU1QLFlBQVlPLFVBQVc7b0JBQzlCLElBQUksTUFBTVIsZ0JBQWdCQyxXQUFXO3dCQUNqQyxPQUFPQTtvQkFDWDtnQkFDSjtZQUNKO1lBQ0EsSUFBSUEsU0FBU1UsUUFBUSxJQUFJRixNQUFNQyxPQUFPLENBQUNULFNBQVNVLFFBQVEsR0FBRztnQkFDdkQsTUFBTUgsWUFBWVAsU0FBU1UsUUFBUTtnQkFDbkMsS0FBSyxNQUFNVixZQUFZTyxVQUFXO29CQUM5QixJQUFJLE1BQU1SLGdCQUFnQkMsV0FBVzt3QkFDakMsT0FBT0E7b0JBQ1g7Z0JBQ0o7WUFDSjtZQUNBLElBQUksTUFBTUQsZ0JBQWdCQyxXQUFXO2dCQUNqQyxPQUFPQTtZQUNYO1lBQ0EsT0FBTztRQUNYLEVBQ0EsT0FBT0csT0FBTztZQUNWUSxRQUFRUixLQUFLLENBQUNBO1lBQ2QsT0FBTztRQUNYO0lBQ0o7QUFDSiIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbmljLXN3YXAvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9tZXRhbWFzay1zZGsvbGliL2VzbS9kZXRlY3RQcm92aWRlci5qcz81NzE0Il0sInNvdXJjZXNDb250ZW50IjpbInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIGZ1bmN0aW9uIGFkb3B0KHZhbHVlKSB7IHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFAgPyB2YWx1ZSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUodmFsdWUpOyB9KTsgfVxuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IGFkb3B0KHJlc3VsdC52YWx1ZSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIGlzU25hcFN1cHBvcnRlZChwcm92aWRlcikge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICB5aWVsZCBwcm92aWRlci5yZXF1ZXN0KHsgbWV0aG9kOiAnd2FsbGV0X2dldFNuYXBzJyB9KTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZGV0ZWN0UHJvdmlkZXIoKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHByb3ZpZGVyID0gd2luZG93LmV0aGVyZXVtO1xuICAgICAgICAgICAgaWYgKCFwcm92aWRlcikge1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHByb3ZpZGVyLnByb3ZpZGVycyAmJiBBcnJheS5pc0FycmF5KHByb3ZpZGVyLnByb3ZpZGVycykpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBwcm92aWRlcnMgPSBwcm92aWRlci5wcm92aWRlcnM7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBwcm92aWRlciBvZiBwcm92aWRlcnMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHlpZWxkIGlzU25hcFN1cHBvcnRlZChwcm92aWRlcikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBwcm92aWRlcjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChwcm92aWRlci5kZXRlY3RlZCAmJiBBcnJheS5pc0FycmF5KHByb3ZpZGVyLmRldGVjdGVkKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHByb3ZpZGVycyA9IHByb3ZpZGVyLmRldGVjdGVkO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgcHJvdmlkZXIgb2YgcHJvdmlkZXJzKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh5aWVsZCBpc1NuYXBTdXBwb3J0ZWQocHJvdmlkZXIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJvdmlkZXI7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoeWllbGQgaXNTbmFwU3VwcG9ydGVkKHByb3ZpZGVyKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwcm92aWRlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbIl9fYXdhaXRlciIsInRoaXNBcmciLCJfYXJndW1lbnRzIiwiUCIsImdlbmVyYXRvciIsImFkb3B0IiwidmFsdWUiLCJyZXNvbHZlIiwiUHJvbWlzZSIsInJlamVjdCIsImZ1bGZpbGxlZCIsInN0ZXAiLCJuZXh0IiwiZSIsInJlamVjdGVkIiwicmVzdWx0IiwiZG9uZSIsInRoZW4iLCJhcHBseSIsImlzU25hcFN1cHBvcnRlZCIsInByb3ZpZGVyIiwicmVxdWVzdCIsIm1ldGhvZCIsImVycm9yIiwiZGV0ZWN0UHJvdmlkZXIiLCJ3aW5kb3ciLCJldGhlcmV1bSIsInByb3ZpZGVycyIsIkFycmF5IiwiaXNBcnJheSIsImRldGVjdGVkIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/metamask-sdk/lib/esm/detectProvider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/metamask-sdk/lib/esm/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@solflare-wallet/metamask-sdk/lib/esm/index.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StandardSolflareMetaMaskWalletAccount: () => (/* reexport safe */ _standard_account__WEBPACK_IMPORTED_MODULE_5__.StandardSolflareMetaMaskWalletAccount),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! eventemitter3 */ \"(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@solflare-wallet/metamask-sdk/lib/esm/utils.js\");\n/* harmony import */ var _detectProvider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./detectProvider */ \"(ssr)/./node_modules/@solflare-wallet/metamask-sdk/lib/esm/detectProvider.js\");\n/* harmony import */ var _standard_account__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./standard/account */ \"(ssr)/./node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/account.js\");\n/* harmony import */ var _standard_solana__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./standard/solana */ \"(ssr)/./node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/solana.js\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@solflare-wallet/metamask-sdk/lib/esm/types.js\");\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\n\n\n\n\n\n\nclass SolflareMetaMask extends eventemitter3__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(config){\n        super();\n        this._network = \"mainnet-beta\";\n        this._iframeParams = {};\n        this._element = null;\n        this._iframe = null;\n        this._publicKey = null;\n        this._account = null;\n        this._isConnected = false;\n        this._connectHandler = null;\n        this._messageHandlers = {};\n        this._handleEvent = (event)=>{\n            var _a, _b;\n            switch(event.type){\n                case \"connect\":\n                    {\n                        this._collapseIframe();\n                        if ((_a = event.data) === null || _a === void 0 ? void 0 : _a.publicKey) {\n                            this._publicKey = event.data.publicKey;\n                            this._isConnected = true;\n                            if (this._connectHandler) {\n                                this._connectHandler.resolve();\n                                this._connectHandler = null;\n                            }\n                            this._connected();\n                        } else {\n                            if (this._connectHandler) {\n                                this._connectHandler.reject();\n                                this._connectHandler = null;\n                            }\n                            this._disconnected();\n                        }\n                        return;\n                    }\n                case \"disconnect\":\n                    {\n                        if (this._connectHandler) {\n                            this._connectHandler.reject();\n                            this._connectHandler = null;\n                        }\n                        this._disconnected();\n                        return;\n                    }\n                case \"accountChanged\":\n                    {\n                        if ((_b = event.data) === null || _b === void 0 ? void 0 : _b.publicKey) {\n                            this._publicKey = event.data.publicKey;\n                            this.emit(\"accountChanged\", this.publicKey);\n                            this._standardConnected();\n                        } else {\n                            this.emit(\"accountChanged\", undefined);\n                            this._standardDisconnected();\n                        }\n                        return;\n                    }\n                default:\n                    {\n                        return;\n                    }\n            }\n        };\n        this._handleResize = (data)=>{\n            if (data.resizeMode === \"full\") {\n                if (data.params.mode === \"fullscreen\") {\n                    this._expandIframe();\n                } else if (data.params.mode === \"hide\") {\n                    this._collapseIframe();\n                }\n            } else if (data.resizeMode === \"coordinates\") {\n                this._resizeIframe(data.params);\n            }\n        };\n        this._handleMessage = (event)=>{\n            var _a;\n            if (((_a = event.data) === null || _a === void 0 ? void 0 : _a.channel) !== \"solflareIframeToWalletAdapter\") {\n                return;\n            }\n            const data = event.data.data || {};\n            if (data.type === \"event\") {\n                this._handleEvent(data.event);\n            } else if (data.type === \"resize\") {\n                this._handleResize(data);\n            } else if (data.type === \"response\") {\n                if (this._messageHandlers[data.id]) {\n                    const { resolve, reject } = this._messageHandlers[data.id];\n                    delete this._messageHandlers[data.id];\n                    if (data.error) {\n                        reject(data.error);\n                    } else {\n                        resolve(data.result);\n                    }\n                }\n            }\n        };\n        this._removeElement = ()=>{\n            if (this._element) {\n                this._element.remove();\n                this._element = null;\n            }\n        };\n        this._removeDanglingElements = ()=>{\n            const elements = document.getElementsByClassName(\"solflare-metamask-wallet-adapter-iframe\");\n            for (const element of elements){\n                if (element.parentElement) {\n                    element.remove();\n                }\n            }\n        };\n        this._injectElement = ()=>{\n            this._removeElement();\n            this._removeDanglingElements();\n            const params = Object.assign(Object.assign({}, this._iframeParams), {\n                mm: true,\n                v: 1,\n                cluster: this._network || \"mainnet-beta\",\n                origin: window.location.origin || \"\",\n                title: document.title || \"\"\n            });\n            const queryString = Object.keys(params).map((key)=>`${key}=${encodeURIComponent(params[key])}`).join(\"&\");\n            const iframeUrl = `${SolflareMetaMask.IFRAME_URL}?${queryString}`;\n            this._element = document.createElement(\"div\");\n            this._element.className = \"solflare-metamask-wallet-adapter-iframe\";\n            this._element.innerHTML = `\n      <iframe src='${iframeUrl}' style='position: fixed; top: 0; bottom: 0; left: 0; right: 0; width: 100%; height: 100%; border: none; border-radius: 0; z-index: 99999; color-scheme: auto;' allowtransparency='true'></iframe>\n    `;\n            document.body.appendChild(this._element);\n            this._iframe = this._element.querySelector(\"iframe\");\n            window.addEventListener(\"message\", this._handleMessage, false);\n        };\n        this._collapseIframe = ()=>{\n            if (this._iframe) {\n                this._iframe.style.top = \"\";\n                this._iframe.style.right = \"\";\n                this._iframe.style.height = \"2px\";\n                this._iframe.style.width = \"2px\";\n            }\n        };\n        this._expandIframe = ()=>{\n            if (this._iframe) {\n                this._iframe.style.top = \"0px\";\n                this._iframe.style.bottom = \"0px\";\n                this._iframe.style.left = \"0px\";\n                this._iframe.style.right = \"0px\";\n                this._iframe.style.width = \"100%\";\n                this._iframe.style.height = \"100%\";\n            }\n        };\n        this._resizeIframe = (params)=>{\n            if (!this._iframe) {\n                return;\n            }\n            this._iframe.style.top = isFinite(params.top) ? `${params.top}px` : \"\";\n            this._iframe.style.bottom = isFinite(params.bottom) ? `${params.bottom}px` : \"\";\n            this._iframe.style.left = isFinite(params.left) ? `${params.left}px` : \"\";\n            this._iframe.style.right = isFinite(params.right) ? `${params.right}px` : \"\";\n            this._iframe.style.width = isFinite(params.width) ? `${params.width}px` : params.width;\n            this._iframe.style.height = isFinite(params.height) ? `${params.height}px` : params.height;\n        };\n        this._sendIframeMessage = (data)=>{\n            if (!this.connected || !this.publicKey) {\n                throw new Error(\"Wallet not connected\");\n            }\n            return new Promise((resolve, reject)=>{\n                var _a, _b;\n                const messageId = (0,uuid__WEBPACK_IMPORTED_MODULE_8__[\"default\"])();\n                this._messageHandlers[messageId] = {\n                    resolve,\n                    reject\n                };\n                (_b = (_a = this._iframe) === null || _a === void 0 ? void 0 : _a.contentWindow) === null || _b === void 0 ? void 0 : _b.postMessage({\n                    channel: \"solflareWalletAdapterToIframe\",\n                    data: Object.assign({\n                        id: messageId\n                    }, data)\n                }, \"*\");\n            });\n        };\n        this._connected = ()=>{\n            this._isConnected = true;\n            this.emit(\"connect\", this.publicKey);\n            this._standardConnected();\n        };\n        this._disconnected = ()=>{\n            this._publicKey = null;\n            this._isConnected = false;\n            window.removeEventListener(\"message\", this._handleMessage, false);\n            this._removeElement();\n            this.emit(\"disconnect\");\n            this._standardDisconnected();\n        };\n        this._standardConnected = ()=>{\n            if (!this.publicKey) {\n                return;\n            }\n            const address = this.publicKey.toString();\n            if (!this._account || this._account.address !== address) {\n                this._account = new _standard_account__WEBPACK_IMPORTED_MODULE_5__.StandardSolflareMetaMaskWalletAccount({\n                    address,\n                    publicKey: this.publicKey.toBytes()\n                });\n                this.emit(\"standard_change\", {\n                    accounts: this.standardAccounts\n                });\n            }\n        };\n        this._standardDisconnected = ()=>{\n            if (this._account) {\n                this._account = null;\n                this.emit(\"standard_change\", {\n                    accounts: this.standardAccounts\n                });\n            }\n        };\n        if (config === null || config === void 0 ? void 0 : config.network) {\n            this._network = config === null || config === void 0 ? void 0 : config.network;\n        }\n        if (window.SolflareMetaMaskParams) {\n            this._iframeParams = Object.assign(Object.assign({}, this._iframeParams), window.SolflareMetaMaskParams);\n        }\n        if (config === null || config === void 0 ? void 0 : config.params) {\n            this._iframeParams = Object.assign(Object.assign({}, this._iframeParams), config === null || config === void 0 ? void 0 : config.params);\n        }\n    }\n    get publicKey() {\n        return this._publicKey ? new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey(this._publicKey) : null;\n    }\n    get standardAccount() {\n        return this._account;\n    }\n    get standardAccounts() {\n        return this._account ? [\n            this._account\n        ] : [];\n    }\n    get isConnected() {\n        return this._isConnected;\n    }\n    get connected() {\n        return this.isConnected;\n    }\n    get autoApprove() {\n        return false;\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function*() {\n            if (this.connected) {\n                return;\n            }\n            this._injectElement();\n            yield new Promise((resolve, reject)=>{\n                this._connectHandler = {\n                    resolve,\n                    reject\n                };\n            });\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function*() {\n            yield this._sendIframeMessage({\n                method: \"disconnect\"\n            });\n            this._disconnected();\n        });\n    }\n    signTransaction(transaction) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function*() {\n            if (!this.connected || !this.publicKey) {\n                throw new Error(\"Wallet not connected\");\n            }\n            try {\n                const serializedTransaction = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.serializeTransaction)(transaction);\n                const response = yield this._sendIframeMessage({\n                    method: \"signTransactionV2\",\n                    params: {\n                        transaction: bs58__WEBPACK_IMPORTED_MODULE_2___default().encode(serializedTransaction)\n                    }\n                });\n                const { transaction: signedTransaction } = response;\n                return (0,_utils__WEBPACK_IMPORTED_MODULE_3__.isLegacyTransactionInstance)(transaction) ? _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction.from(bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(signedTransaction)) : _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.VersionedTransaction.deserialize(bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(signedTransaction));\n            } catch (e) {\n                throw new Error(((_a = e === null || e === void 0 ? void 0 : e.toString) === null || _a === void 0 ? void 0 : _a.call(e)) || \"Failed to sign transaction\");\n            }\n        });\n    }\n    signAllTransactions(transactions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function*() {\n            if (!this.connected || !this.publicKey) {\n                throw new Error(\"Wallet not connected\");\n            }\n            try {\n                const serializedTransactions = transactions.map((transaction)=>(0,_utils__WEBPACK_IMPORTED_MODULE_3__.serializeTransaction)(transaction));\n                const { transactions: signedTransactions } = yield this._sendIframeMessage({\n                    method: \"signAllTransactionsV2\",\n                    params: {\n                        transactions: serializedTransactions.map((transaction)=>bs58__WEBPACK_IMPORTED_MODULE_2___default().encode(transaction))\n                    }\n                });\n                return signedTransactions.map((signedTransaction, index)=>{\n                    return (0,_utils__WEBPACK_IMPORTED_MODULE_3__.isLegacyTransactionInstance)(transactions[index]) ? _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction.from(bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(signedTransaction)) : _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.VersionedTransaction.deserialize(bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(signedTransaction));\n                });\n            } catch (e) {\n                throw new Error(((_a = e === null || e === void 0 ? void 0 : e.toString) === null || _a === void 0 ? void 0 : _a.call(e)) || \"Failed to sign transactions\");\n            }\n        });\n    }\n    signAndSendTransaction(transaction, options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function*() {\n            if (!this.connected || !this.publicKey) {\n                throw new Error(\"Wallet not connected\");\n            }\n            try {\n                const serializedTransaction = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.serializeTransaction)(transaction);\n                const { signature } = yield this._sendIframeMessage({\n                    method: \"signAndSendTransaction\",\n                    params: {\n                        transaction: bs58__WEBPACK_IMPORTED_MODULE_2___default().encode(serializedTransaction),\n                        options\n                    }\n                });\n                return signature;\n            } catch (e) {\n                throw new Error(((_a = e === null || e === void 0 ? void 0 : e.toString) === null || _a === void 0 ? void 0 : _a.call(e)) || \"Failed to sign and send transaction\");\n            }\n        });\n    }\n    signMessage(data, display = \"utf8\") {\n        var _a;\n        return __awaiter(this, void 0, void 0, function*() {\n            if (!this.connected || !this.publicKey) {\n                throw new Error(\"Wallet not connected\");\n            }\n            try {\n                const { signature } = yield this._sendIframeMessage({\n                    method: \"signMessage\",\n                    params: {\n                        data: bs58__WEBPACK_IMPORTED_MODULE_2___default().encode(data),\n                        display\n                    }\n                });\n                return Uint8Array.from(bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(signature));\n            } catch (e) {\n                throw new Error(((_a = e === null || e === void 0 ? void 0 : e.toString) === null || _a === void 0 ? void 0 : _a.call(e)) || \"Failed to sign message\");\n            }\n        });\n    }\n    sign(data, display = \"utf8\") {\n        return __awaiter(this, void 0, void 0, function*() {\n            return yield this.signMessage(data, display);\n        });\n    }\n    static isSupported() {\n        return __awaiter(this, void 0, void 0, function*() {\n            const provider = yield (0,_detectProvider__WEBPACK_IMPORTED_MODULE_4__.detectProvider)();\n            return !!provider;\n        });\n    }\n    standardSignAndSendTransaction(...inputs) {\n        return __awaiter(this, void 0, void 0, function*() {\n            if (!this.connected) throw new Error(\"not connected\");\n            const outputs = [];\n            if (inputs.length === 1) {\n                const { transaction, account, chain, options } = inputs[0];\n                const { minContextSlot, preflightCommitment, skipPreflight, maxRetries } = options || {};\n                if (account !== this._account) throw new Error(\"invalid account\");\n                if (!(0,_standard_solana__WEBPACK_IMPORTED_MODULE_6__.isSolanaChain)(chain)) throw new Error(\"invalid chain\");\n                const signature = yield this.signAndSendTransaction(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.VersionedTransaction.deserialize(transaction), {\n                    preflightCommitment,\n                    minContextSlot,\n                    maxRetries,\n                    skipPreflight\n                });\n                outputs.push({\n                    signature: bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(signature)\n                });\n            } else if (inputs.length > 1) {\n                for (const input of inputs){\n                    outputs.push(...yield this.standardSignAndSendTransaction(input));\n                }\n            }\n            return outputs;\n        });\n    }\n    standardSignTransaction(...inputs) {\n        return __awaiter(this, void 0, void 0, function*() {\n            if (!this.connected) throw new Error(\"not connected\");\n            const outputs = [];\n            if (inputs.length === 1) {\n                const { transaction, account, chain } = inputs[0];\n                if (account !== this._account) throw new Error(\"invalid account\");\n                if (chain && !(0,_standard_solana__WEBPACK_IMPORTED_MODULE_6__.isSolanaChain)(chain)) throw new Error(\"invalid chain\");\n                const signedTransaction = yield this.signTransaction(_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.VersionedTransaction.deserialize(transaction));\n                outputs.push({\n                    signedTransaction: signedTransaction.serialize()\n                });\n            } else if (inputs.length > 1) {\n                let chain;\n                for (const input of inputs){\n                    if (input.account !== this._account) throw new Error(\"invalid account\");\n                    if (input.chain) {\n                        if (!(0,_standard_solana__WEBPACK_IMPORTED_MODULE_6__.isSolanaChain)(input.chain)) throw new Error(\"invalid chain\");\n                        if (chain) {\n                            if (input.chain !== chain) throw new Error(\"conflicting chain\");\n                        } else {\n                            chain = input.chain;\n                        }\n                    }\n                }\n                const transactions = inputs.map(({ transaction })=>_solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.VersionedTransaction.deserialize(transaction));\n                const signedTransactions = yield this.signAllTransactions(transactions);\n                outputs.push(...signedTransactions.map((signedTransaction)=>({\n                        signedTransaction: signedTransaction.serialize()\n                    })));\n            }\n            return outputs;\n        });\n    }\n    standardSignMessage(...inputs) {\n        return __awaiter(this, void 0, void 0, function*() {\n            if (!this.connected) throw new Error(\"not connected\");\n            const outputs = [];\n            if (inputs.length === 1) {\n                const { message, account } = inputs[0];\n                if (account !== this._account) throw new Error(\"invalid account\");\n                const signature = yield this.signMessage(message);\n                outputs.push({\n                    signedMessage: message,\n                    signature\n                });\n            } else if (inputs.length > 1) {\n                for (const input of inputs){\n                    outputs.push(...yield this.standardSignMessage(input));\n                }\n            }\n            return outputs;\n        });\n    }\n}\nSolflareMetaMask.IFRAME_URL = \"https://widget.solflare.com/\";\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (SolflareMetaMask);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/metamask-sdk/lib/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/account.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/account.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StandardSolflareMetaMaskWalletAccount: () => (/* binding */ StandardSolflareMetaMaskWalletAccount)\n/* harmony export */ });\n/* harmony import */ var _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/wallet-standard-features */ \"(ssr)/./node_modules/@solana/wallet-standard-features/lib/esm/signAndSendTransaction.js\");\n/* harmony import */ var _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @solana/wallet-standard-features */ \"(ssr)/./node_modules/@solana/wallet-standard-features/lib/esm/signTransaction.js\");\n/* harmony import */ var _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @solana/wallet-standard-features */ \"(ssr)/./node_modules/@solana/wallet-standard-features/lib/esm/signMessage.js\");\n/* harmony import */ var _solana_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./solana.js */ \"(ssr)/./node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/solana.js\");\n// This is copied with modification from @wallet-standard/wallet\nvar __classPrivateFieldGet = undefined && undefined.__classPrivateFieldGet || function(receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = undefined && undefined.__classPrivateFieldSet || function(receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar _StandardSolflareMetaMaskWalletAccount_address, _StandardSolflareMetaMaskWalletAccount_publicKey, _StandardSolflareMetaMaskWalletAccount_chains, _StandardSolflareMetaMaskWalletAccount_features, _StandardSolflareMetaMaskWalletAccount_label, _StandardSolflareMetaMaskWalletAccount_icon;\n\n\nconst chains = _solana_js__WEBPACK_IMPORTED_MODULE_0__.SOLANA_CHAINS;\nconst features = [\n    _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_1__.SolanaSignAndSendTransaction,\n    _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_2__.SolanaSignTransaction,\n    _solana_wallet_standard_features__WEBPACK_IMPORTED_MODULE_3__.SolanaSignMessage\n];\nclass StandardSolflareMetaMaskWalletAccount {\n    get address() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_address, \"f\");\n    }\n    get publicKey() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_publicKey, \"f\").slice();\n    }\n    get chains() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_chains, \"f\").slice();\n    }\n    get features() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_features, \"f\").slice();\n    }\n    get label() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_label, \"f\");\n    }\n    get icon() {\n        return __classPrivateFieldGet(this, _StandardSolflareMetaMaskWalletAccount_icon, \"f\");\n    }\n    constructor({ address, publicKey, label, icon }){\n        _StandardSolflareMetaMaskWalletAccount_address.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_publicKey.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_chains.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_features.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_label.set(this, void 0);\n        _StandardSolflareMetaMaskWalletAccount_icon.set(this, void 0);\n        if (new.target === StandardSolflareMetaMaskWalletAccount) {\n            Object.freeze(this);\n        }\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_address, address, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_publicKey, publicKey, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_chains, chains, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_features, features, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_label, label, \"f\");\n        __classPrivateFieldSet(this, _StandardSolflareMetaMaskWalletAccount_icon, icon, \"f\");\n    }\n}\n_StandardSolflareMetaMaskWalletAccount_address = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_publicKey = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_chains = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_features = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_label = new WeakMap(), _StandardSolflareMetaMaskWalletAccount_icon = new WeakMap();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/account.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/solana.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/solana.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SOLANA_CHAINS: () => (/* binding */ SOLANA_CHAINS),\n/* harmony export */   SOLANA_DEVNET_CHAIN: () => (/* binding */ SOLANA_DEVNET_CHAIN),\n/* harmony export */   SOLANA_LOCALNET_CHAIN: () => (/* binding */ SOLANA_LOCALNET_CHAIN),\n/* harmony export */   SOLANA_MAINNET_CHAIN: () => (/* binding */ SOLANA_MAINNET_CHAIN),\n/* harmony export */   SOLANA_TESTNET_CHAIN: () => (/* binding */ SOLANA_TESTNET_CHAIN),\n/* harmony export */   isSolanaChain: () => (/* binding */ isSolanaChain)\n/* harmony export */ });\n// This is copied from @solana/wallet-standard-chains\n/** Solana Mainnet (beta) cluster, e.g. https://api.mainnet-beta.solana.com */ const SOLANA_MAINNET_CHAIN = \"solana:mainnet\";\n/** Solana Devnet cluster, e.g. https://api.devnet.solana.com */ const SOLANA_DEVNET_CHAIN = \"solana:devnet\";\n/** Solana Testnet cluster, e.g. https://api.testnet.solana.com */ const SOLANA_TESTNET_CHAIN = \"solana:testnet\";\n/** Solana Localnet cluster, e.g. http://localhost:8899 */ const SOLANA_LOCALNET_CHAIN = \"solana:localnet\";\n/** Array of all Solana clusters */ const SOLANA_CHAINS = [\n    SOLANA_MAINNET_CHAIN,\n    SOLANA_DEVNET_CHAIN,\n    SOLANA_TESTNET_CHAIN,\n    SOLANA_LOCALNET_CHAIN\n];\n/**\n * Check if a chain corresponds with one of the Solana clusters.\n */ function isSolanaChain(chain) {\n    return SOLANA_CHAINS.includes(chain);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9tZXRhbWFzay1zZGsvbGliL2VzbS9zdGFuZGFyZC9zb2xhbmEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEscURBQXFEO0FBQ3JELDRFQUE0RSxHQUNyRSxNQUFNQSx1QkFBdUIsaUJBQWlCO0FBQ3JELDhEQUE4RCxHQUN2RCxNQUFNQyxzQkFBc0IsZ0JBQWdCO0FBQ25ELGdFQUFnRSxHQUN6RCxNQUFNQyx1QkFBdUIsaUJBQWlCO0FBQ3JELHdEQUF3RCxHQUNqRCxNQUFNQyx3QkFBd0Isa0JBQWtCO0FBQ3ZELGlDQUFpQyxHQUMxQixNQUFNQyxnQkFBZ0I7SUFDekJKO0lBQ0FDO0lBQ0FDO0lBQ0FDO0NBQ0gsQ0FBQztBQUNGOztDQUVDLEdBQ00sU0FBU0UsY0FBY0MsS0FBSztJQUMvQixPQUFPRixjQUFjRyxRQUFRLENBQUNEO0FBQ2xDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29uaWMtc3dhcC8uL25vZGVfbW9kdWxlcy9Ac29sZmxhcmUtd2FsbGV0L21ldGFtYXNrLXNkay9saWIvZXNtL3N0YW5kYXJkL3NvbGFuYS5qcz85MTA4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFRoaXMgaXMgY29waWVkIGZyb20gQHNvbGFuYS93YWxsZXQtc3RhbmRhcmQtY2hhaW5zXG4vKiogU29sYW5hIE1haW5uZXQgKGJldGEpIGNsdXN0ZXIsIGUuZy4gaHR0cHM6Ly9hcGkubWFpbm5ldC1iZXRhLnNvbGFuYS5jb20gKi9cbmV4cG9ydCBjb25zdCBTT0xBTkFfTUFJTk5FVF9DSEFJTiA9ICdzb2xhbmE6bWFpbm5ldCc7XG4vKiogU29sYW5hIERldm5ldCBjbHVzdGVyLCBlLmcuIGh0dHBzOi8vYXBpLmRldm5ldC5zb2xhbmEuY29tICovXG5leHBvcnQgY29uc3QgU09MQU5BX0RFVk5FVF9DSEFJTiA9ICdzb2xhbmE6ZGV2bmV0Jztcbi8qKiBTb2xhbmEgVGVzdG5ldCBjbHVzdGVyLCBlLmcuIGh0dHBzOi8vYXBpLnRlc3RuZXQuc29sYW5hLmNvbSAqL1xuZXhwb3J0IGNvbnN0IFNPTEFOQV9URVNUTkVUX0NIQUlOID0gJ3NvbGFuYTp0ZXN0bmV0Jztcbi8qKiBTb2xhbmEgTG9jYWxuZXQgY2x1c3RlciwgZS5nLiBodHRwOi8vbG9jYWxob3N0Ojg4OTkgKi9cbmV4cG9ydCBjb25zdCBTT0xBTkFfTE9DQUxORVRfQ0hBSU4gPSAnc29sYW5hOmxvY2FsbmV0Jztcbi8qKiBBcnJheSBvZiBhbGwgU29sYW5hIGNsdXN0ZXJzICovXG5leHBvcnQgY29uc3QgU09MQU5BX0NIQUlOUyA9IFtcbiAgICBTT0xBTkFfTUFJTk5FVF9DSEFJTixcbiAgICBTT0xBTkFfREVWTkVUX0NIQUlOLFxuICAgIFNPTEFOQV9URVNUTkVUX0NIQUlOLFxuICAgIFNPTEFOQV9MT0NBTE5FVF9DSEFJTlxuXTtcbi8qKlxuICogQ2hlY2sgaWYgYSBjaGFpbiBjb3JyZXNwb25kcyB3aXRoIG9uZSBvZiB0aGUgU29sYW5hIGNsdXN0ZXJzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNTb2xhbmFDaGFpbihjaGFpbikge1xuICAgIHJldHVybiBTT0xBTkFfQ0hBSU5TLmluY2x1ZGVzKGNoYWluKTtcbn1cbiJdLCJuYW1lcyI6WyJTT0xBTkFfTUFJTk5FVF9DSEFJTiIsIlNPTEFOQV9ERVZORVRfQ0hBSU4iLCJTT0xBTkFfVEVTVE5FVF9DSEFJTiIsIlNPTEFOQV9MT0NBTE5FVF9DSEFJTiIsIlNPTEFOQV9DSEFJTlMiLCJpc1NvbGFuYUNoYWluIiwiY2hhaW4iLCJpbmNsdWRlcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/metamask-sdk/lib/esm/standard/solana.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/metamask-sdk/lib/esm/types.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@solflare-wallet/metamask-sdk/lib/esm/types.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9tZXRhbWFzay1zZGsvbGliL2VzbS90eXBlcy5qcyIsIm1hcHBpbmdzIjoiO0FBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb25pYy1zd2FwLy4vbm9kZV9tb2R1bGVzL0Bzb2xmbGFyZS13YWxsZXQvbWV0YW1hc2stc2RrL2xpYi9lc20vdHlwZXMuanM/N2EwOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/metamask-sdk/lib/esm/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/metamask-sdk/lib/esm/utils.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@solflare-wallet/metamask-sdk/lib/esm/utils.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addSignature: () => (/* binding */ addSignature),\n/* harmony export */   isLegacyTransactionInstance: () => (/* binding */ isLegacyTransactionInstance),\n/* harmony export */   serializeTransaction: () => (/* binding */ serializeTransaction),\n/* harmony export */   serializeTransactionMessage: () => (/* binding */ serializeTransactionMessage)\n/* harmony export */ });\nfunction isLegacyTransactionInstance(transaction) {\n    return transaction.version === undefined;\n}\nfunction serializeTransaction(transaction) {\n    return isLegacyTransactionInstance(transaction) ? transaction.serialize({\n        verifySignatures: false,\n        requireAllSignatures: false\n    }) : transaction.serialize();\n}\nfunction serializeTransactionMessage(transaction) {\n    return isLegacyTransactionInstance(transaction) ? transaction.serializeMessage() : transaction.message.serialize();\n}\nfunction addSignature(transaction, publicKey, signature) {\n    if (isLegacyTransactionInstance(transaction)) {\n        transaction.addSignature(publicKey, Buffer.from(signature));\n    } else {\n        const signerPubkeys = transaction.message.staticAccountKeys.slice(0, transaction.message.header.numRequiredSignatures);\n        const signerIndex = signerPubkeys.findIndex((pubkey)=>pubkey.equals(publicKey));\n        if (signerIndex >= 0) {\n            transaction.signatures[signerIndex] = signature;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9tZXRhbWFzay1zZGsvbGliL2VzbS91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQU8sU0FBU0EsNEJBQTRCQyxXQUFXO0lBQ25ELE9BQU9BLFlBQVlDLE9BQU8sS0FBS0M7QUFDbkM7QUFDTyxTQUFTQyxxQkFBcUJILFdBQVc7SUFDNUMsT0FBT0QsNEJBQTRCQyxlQUM3QkEsWUFBWUksU0FBUyxDQUFDO1FBQ3BCQyxrQkFBa0I7UUFDbEJDLHNCQUFzQjtJQUMxQixLQUNFTixZQUFZSSxTQUFTO0FBQy9CO0FBQ08sU0FBU0csNEJBQTRCUCxXQUFXO0lBQ25ELE9BQU9ELDRCQUE0QkMsZUFDN0JBLFlBQVlRLGdCQUFnQixLQUM1QlIsWUFBWVMsT0FBTyxDQUFDTCxTQUFTO0FBQ3ZDO0FBQ08sU0FBU00sYUFBYVYsV0FBVyxFQUFFVyxTQUFTLEVBQUVDLFNBQVM7SUFDMUQsSUFBSWIsNEJBQTRCQyxjQUFjO1FBQzFDQSxZQUFZVSxZQUFZLENBQUNDLFdBQVdFLE9BQU9DLElBQUksQ0FBQ0Y7SUFDcEQsT0FDSztRQUNELE1BQU1HLGdCQUFnQmYsWUFBWVMsT0FBTyxDQUFDTyxpQkFBaUIsQ0FBQ0MsS0FBSyxDQUFDLEdBQUdqQixZQUFZUyxPQUFPLENBQUNTLE1BQU0sQ0FBQ0MscUJBQXFCO1FBQ3JILE1BQU1DLGNBQWNMLGNBQWNNLFNBQVMsQ0FBQyxDQUFDQyxTQUFXQSxPQUFPQyxNQUFNLENBQUNaO1FBQ3RFLElBQUlTLGVBQWUsR0FBRztZQUNsQnBCLFlBQVl3QixVQUFVLENBQUNKLFlBQVksR0FBR1I7UUFDMUM7SUFDSjtBQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29uaWMtc3dhcC8uL25vZGVfbW9kdWxlcy9Ac29sZmxhcmUtd2FsbGV0L21ldGFtYXNrLXNkay9saWIvZXNtL3V0aWxzLmpzPzQ0NWYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzTGVnYWN5VHJhbnNhY3Rpb25JbnN0YW5jZSh0cmFuc2FjdGlvbikge1xuICAgIHJldHVybiB0cmFuc2FjdGlvbi52ZXJzaW9uID09PSB1bmRlZmluZWQ7XG59XG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplVHJhbnNhY3Rpb24odHJhbnNhY3Rpb24pIHtcbiAgICByZXR1cm4gaXNMZWdhY3lUcmFuc2FjdGlvbkluc3RhbmNlKHRyYW5zYWN0aW9uKVxuICAgICAgICA/IHRyYW5zYWN0aW9uLnNlcmlhbGl6ZSh7XG4gICAgICAgICAgICB2ZXJpZnlTaWduYXR1cmVzOiBmYWxzZSxcbiAgICAgICAgICAgIHJlcXVpcmVBbGxTaWduYXR1cmVzOiBmYWxzZVxuICAgICAgICB9KVxuICAgICAgICA6IHRyYW5zYWN0aW9uLnNlcmlhbGl6ZSgpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHNlcmlhbGl6ZVRyYW5zYWN0aW9uTWVzc2FnZSh0cmFuc2FjdGlvbikge1xuICAgIHJldHVybiBpc0xlZ2FjeVRyYW5zYWN0aW9uSW5zdGFuY2UodHJhbnNhY3Rpb24pXG4gICAgICAgID8gdHJhbnNhY3Rpb24uc2VyaWFsaXplTWVzc2FnZSgpXG4gICAgICAgIDogdHJhbnNhY3Rpb24ubWVzc2FnZS5zZXJpYWxpemUoKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhZGRTaWduYXR1cmUodHJhbnNhY3Rpb24sIHB1YmxpY0tleSwgc2lnbmF0dXJlKSB7XG4gICAgaWYgKGlzTGVnYWN5VHJhbnNhY3Rpb25JbnN0YW5jZSh0cmFuc2FjdGlvbikpIHtcbiAgICAgICAgdHJhbnNhY3Rpb24uYWRkU2lnbmF0dXJlKHB1YmxpY0tleSwgQnVmZmVyLmZyb20oc2lnbmF0dXJlKSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBzaWduZXJQdWJrZXlzID0gdHJhbnNhY3Rpb24ubWVzc2FnZS5zdGF0aWNBY2NvdW50S2V5cy5zbGljZSgwLCB0cmFuc2FjdGlvbi5tZXNzYWdlLmhlYWRlci5udW1SZXF1aXJlZFNpZ25hdHVyZXMpO1xuICAgICAgICBjb25zdCBzaWduZXJJbmRleCA9IHNpZ25lclB1YmtleXMuZmluZEluZGV4KChwdWJrZXkpID0+IHB1YmtleS5lcXVhbHMocHVibGljS2V5KSk7XG4gICAgICAgIGlmIChzaWduZXJJbmRleCA+PSAwKSB7XG4gICAgICAgICAgICB0cmFuc2FjdGlvbi5zaWduYXR1cmVzW3NpZ25lckluZGV4XSA9IHNpZ25hdHVyZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6WyJpc0xlZ2FjeVRyYW5zYWN0aW9uSW5zdGFuY2UiLCJ0cmFuc2FjdGlvbiIsInZlcnNpb24iLCJ1bmRlZmluZWQiLCJzZXJpYWxpemVUcmFuc2FjdGlvbiIsInNlcmlhbGl6ZSIsInZlcmlmeVNpZ25hdHVyZXMiLCJyZXF1aXJlQWxsU2lnbmF0dXJlcyIsInNlcmlhbGl6ZVRyYW5zYWN0aW9uTWVzc2FnZSIsInNlcmlhbGl6ZU1lc3NhZ2UiLCJtZXNzYWdlIiwiYWRkU2lnbmF0dXJlIiwicHVibGljS2V5Iiwic2lnbmF0dXJlIiwiQnVmZmVyIiwiZnJvbSIsInNpZ25lclB1YmtleXMiLCJzdGF0aWNBY2NvdW50S2V5cyIsInNsaWNlIiwiaGVhZGVyIiwibnVtUmVxdWlyZWRTaWduYXR1cmVzIiwic2lnbmVySW5kZXgiLCJmaW5kSW5kZXgiLCJwdWJrZXkiLCJlcXVhbHMiLCJzaWduYXR1cmVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/metamask-sdk/lib/esm/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/eventemitter3/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/metamask-sdk/node_modules/eventemitter3/index.js ***!
  \****************************************************************************************/
/***/ ((module) => {

eval("\nvar has = Object.prototype.hasOwnProperty, prefix = \"~\";\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */ function Events() {}\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n    Events.prototype = Object.create(null);\n    //\n    // This hack is needed because the `__proto__` property is still inherited in\n    // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n    //\n    if (!new Events().__proto__) prefix = false;\n}\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */ function EE(fn, context, once) {\n    this.fn = fn;\n    this.context = context;\n    this.once = once || false;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */ function addListener(emitter, event, fn, context, once) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"The listener must be a function\");\n    }\n    var listener = new EE(fn, context || emitter, once), evt = prefix ? prefix + event : event;\n    if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n    else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n    else emitter._events[evt] = [\n        emitter._events[evt],\n        listener\n    ];\n    return emitter;\n}\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */ function clearEvent(emitter, evt) {\n    if (--emitter._eventsCount === 0) emitter._events = new Events();\n    else delete emitter._events[evt];\n}\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */ function EventEmitter() {\n    this._events = new Events();\n    this._eventsCount = 0;\n}\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */ EventEmitter.prototype.eventNames = function eventNames() {\n    var names = [], events, name;\n    if (this._eventsCount === 0) return names;\n    for(name in events = this._events){\n        if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n    }\n    if (Object.getOwnPropertySymbols) {\n        return names.concat(Object.getOwnPropertySymbols(events));\n    }\n    return names;\n};\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */ EventEmitter.prototype.listeners = function listeners(event) {\n    var evt = prefix ? prefix + event : event, handlers = this._events[evt];\n    if (!handlers) return [];\n    if (handlers.fn) return [\n        handlers.fn\n    ];\n    for(var i = 0, l = handlers.length, ee = new Array(l); i < l; i++){\n        ee[i] = handlers[i].fn;\n    }\n    return ee;\n};\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */ EventEmitter.prototype.listenerCount = function listenerCount(event) {\n    var evt = prefix ? prefix + event : event, listeners = this._events[evt];\n    if (!listeners) return 0;\n    if (listeners.fn) return 1;\n    return listeners.length;\n};\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */ EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n    var evt = prefix ? prefix + event : event;\n    if (!this._events[evt]) return false;\n    var listeners = this._events[evt], len = arguments.length, args, i;\n    if (listeners.fn) {\n        if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n        switch(len){\n            case 1:\n                return listeners.fn.call(listeners.context), true;\n            case 2:\n                return listeners.fn.call(listeners.context, a1), true;\n            case 3:\n                return listeners.fn.call(listeners.context, a1, a2), true;\n            case 4:\n                return listeners.fn.call(listeners.context, a1, a2, a3), true;\n            case 5:\n                return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n            case 6:\n                return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n        }\n        for(i = 1, args = new Array(len - 1); i < len; i++){\n            args[i - 1] = arguments[i];\n        }\n        listeners.fn.apply(listeners.context, args);\n    } else {\n        var length = listeners.length, j;\n        for(i = 0; i < length; i++){\n            if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n            switch(len){\n                case 1:\n                    listeners[i].fn.call(listeners[i].context);\n                    break;\n                case 2:\n                    listeners[i].fn.call(listeners[i].context, a1);\n                    break;\n                case 3:\n                    listeners[i].fn.call(listeners[i].context, a1, a2);\n                    break;\n                case 4:\n                    listeners[i].fn.call(listeners[i].context, a1, a2, a3);\n                    break;\n                default:\n                    if (!args) for(j = 1, args = new Array(len - 1); j < len; j++){\n                        args[j - 1] = arguments[j];\n                    }\n                    listeners[i].fn.apply(listeners[i].context, args);\n            }\n        }\n    }\n    return true;\n};\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */ EventEmitter.prototype.on = function on(event, fn, context) {\n    return addListener(this, event, fn, context, false);\n};\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */ EventEmitter.prototype.once = function once(event, fn, context) {\n    return addListener(this, event, fn, context, true);\n};\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */ EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n    var evt = prefix ? prefix + event : event;\n    if (!this._events[evt]) return this;\n    if (!fn) {\n        clearEvent(this, evt);\n        return this;\n    }\n    var listeners = this._events[evt];\n    if (listeners.fn) {\n        if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {\n            clearEvent(this, evt);\n        }\n    } else {\n        for(var i = 0, events = [], length = listeners.length; i < length; i++){\n            if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {\n                events.push(listeners[i]);\n            }\n        }\n        //\n        // Reset the array, or remove it completely if we have no more listeners.\n        //\n        if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n        else clearEvent(this, evt);\n    }\n    return this;\n};\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */ EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n    var evt;\n    if (event) {\n        evt = prefix ? prefix + event : event;\n        if (this._events[evt]) clearEvent(this, evt);\n    } else {\n        this._events = new Events();\n        this._eventsCount = 0;\n    }\n    return this;\n};\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n//\n// Expose the module.\n//\nif (true) {\n    module.exports = EventEmitter;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/eventemitter3/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/native.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/native.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    randomUUID: (crypto__WEBPACK_IMPORTED_MODULE_0___default().randomUUID)\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9tZXRhbWFzay1zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS9uYXRpdmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRCO0FBQzVCLGlFQUFlO0lBQ2JDLFlBQVlELDBEQUFpQjtBQUMvQixDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb25pYy1zd2FwLy4vbm9kZV9tb2R1bGVzL0Bzb2xmbGFyZS13YWxsZXQvbWV0YW1hc2stc2RrL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvbmF0aXZlLmpzPzE0M2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyeXB0byBmcm9tICdjcnlwdG8nO1xuZXhwb3J0IGRlZmF1bHQge1xuICByYW5kb21VVUlEOiBjcnlwdG8ucmFuZG9tVVVJRFxufTsiXSwibmFtZXMiOlsiY3J5cHRvIiwicmFuZG9tVVVJRCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/native.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/regex.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/regex.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9tZXRhbWFzay1zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS9yZWdleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUscUhBQXFILEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb25pYy1zd2FwLy4vbm9kZV9tb2R1bGVzL0Bzb2xmbGFyZS13YWxsZXQvbWV0YW1hc2stc2RrL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvcmVnZXguanM/ODBmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAvXig/OlswLTlhLWZdezh9LVswLTlhLWZdezR9LVsxLTVdWzAtOWEtZl17M30tWzg5YWJdWzAtOWEtZl17M30tWzAtOWEtZl17MTJ9fDAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCkkL2k7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/regex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/rng.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/rng.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rng)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\nlet poolPtr = rnds8Pool.length;\nfunction rng() {\n    if (poolPtr > rnds8Pool.length - 16) {\n        crypto__WEBPACK_IMPORTED_MODULE_0___default().randomFillSync(rnds8Pool);\n        poolPtr = 0;\n    }\n    return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9tZXRhbWFzay1zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS9ybmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRCO0FBQzVCLE1BQU1DLFlBQVksSUFBSUMsV0FBVyxNQUFNLHFDQUFxQztBQUU1RSxJQUFJQyxVQUFVRixVQUFVRyxNQUFNO0FBQ2YsU0FBU0M7SUFDdEIsSUFBSUYsVUFBVUYsVUFBVUcsTUFBTSxHQUFHLElBQUk7UUFDbkNKLDREQUFxQixDQUFDQztRQUN0QkUsVUFBVTtJQUNaO0lBRUEsT0FBT0YsVUFBVU0sS0FBSyxDQUFDSixTQUFTQSxXQUFXO0FBQzdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29uaWMtc3dhcC8uL25vZGVfbW9kdWxlcy9Ac29sZmxhcmUtd2FsbGV0L21ldGFtYXNrLXNkay9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3JuZy5qcz80YTY0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcnlwdG8gZnJvbSAnY3J5cHRvJztcbmNvbnN0IHJuZHM4UG9vbCA9IG5ldyBVaW50OEFycmF5KDI1Nik7IC8vICMgb2YgcmFuZG9tIHZhbHVlcyB0byBwcmUtYWxsb2NhdGVcblxubGV0IHBvb2xQdHIgPSBybmRzOFBvb2wubGVuZ3RoO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcm5nKCkge1xuICBpZiAocG9vbFB0ciA+IHJuZHM4UG9vbC5sZW5ndGggLSAxNikge1xuICAgIGNyeXB0by5yYW5kb21GaWxsU3luYyhybmRzOFBvb2wpO1xuICAgIHBvb2xQdHIgPSAwO1xuICB9XG5cbiAgcmV0dXJuIHJuZHM4UG9vbC5zbGljZShwb29sUHRyLCBwb29sUHRyICs9IDE2KTtcbn0iXSwibmFtZXMiOlsiY3J5cHRvIiwicm5kczhQb29sIiwiVWludDhBcnJheSIsInBvb2xQdHIiLCJsZW5ndGgiLCJybmciLCJyYW5kb21GaWxsU3luYyIsInNsaWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/rng.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/stringify.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/stringify.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   unsafeStringify: () => (/* binding */ unsafeStringify)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/validate.js\");\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */ const byteToHex = [];\nfor(let i = 0; i < 256; ++i){\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nfunction unsafeStringify(arr, offset = 0) {\n    // Note: Be careful editing this code!  It's been tuned for performance\n    // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n    return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + \"-\" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + \"-\" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + \"-\" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + \"-\" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n    // of the following:\n    // - One or more input array values don't map to a hex octet (leading to\n    // \"undefined\" in the uuid)\n    // - Invalid input values for the RFC `version` or `variant` fields\n    if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n        throw TypeError(\"Stringified UUID is invalid\");\n    }\n    return uuid;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9tZXRhbWFzay1zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS9zdHJpbmdpZnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ3JDOzs7Q0FHQyxHQUVELE1BQU1DLFlBQVksRUFBRTtBQUVwQixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSSxLQUFLLEVBQUVBLEVBQUc7SUFDNUJELFVBQVVFLElBQUksQ0FBQyxDQUFDRCxJQUFJLEtBQUksRUFBR0UsUUFBUSxDQUFDLElBQUlDLEtBQUssQ0FBQztBQUNoRDtBQUVPLFNBQVNDLGdCQUFnQkMsR0FBRyxFQUFFQyxTQUFTLENBQUM7SUFDN0MsdUVBQXVFO0lBQ3ZFLG9GQUFvRjtJQUNwRixPQUFPUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxFQUFFLENBQUMsR0FBR1AsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsRUFBRSxDQUFDLEdBQUdQLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEVBQUUsQ0FBQyxHQUFHUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxFQUFFLENBQUMsR0FBRyxNQUFNUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxFQUFFLENBQUMsR0FBR1AsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsRUFBRSxDQUFDLEdBQUcsTUFBTVAsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsRUFBRSxDQUFDLEdBQUdQLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEVBQUUsQ0FBQyxHQUFHLE1BQU1QLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEVBQUUsQ0FBQyxHQUFHUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxFQUFFLENBQUMsR0FBRyxNQUFNUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxHQUFHLENBQUMsR0FBR1AsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsR0FBRyxDQUFDLEdBQUdQLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEdBQUcsQ0FBQyxHQUFHUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxHQUFHLENBQUMsR0FBR1AsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsR0FBRyxDQUFDLEdBQUdQLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEdBQUcsQ0FBQztBQUNwZjtBQUVBLFNBQVNDLFVBQVVGLEdBQUcsRUFBRUMsU0FBUyxDQUFDO0lBQ2hDLE1BQU1FLE9BQU9KLGdCQUFnQkMsS0FBS0MsU0FBUyw0RUFBNEU7SUFDdkgsb0JBQW9CO0lBQ3BCLHdFQUF3RTtJQUN4RSwyQkFBMkI7SUFDM0IsbUVBQW1FO0lBRW5FLElBQUksQ0FBQ1Isd0RBQVFBLENBQUNVLE9BQU87UUFDbkIsTUFBTUMsVUFBVTtJQUNsQjtJQUVBLE9BQU9EO0FBQ1Q7QUFFQSxpRUFBZUQsU0FBU0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbmljLXN3YXAvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9tZXRhbWFzay1zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS9zdHJpbmdpZnkuanM/MTYyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdmFsaWRhdGUgZnJvbSAnLi92YWxpZGF0ZS5qcyc7XG4vKipcbiAqIENvbnZlcnQgYXJyYXkgb2YgMTYgYnl0ZSB2YWx1ZXMgdG8gVVVJRCBzdHJpbmcgZm9ybWF0IG9mIHRoZSBmb3JtOlxuICogWFhYWFhYWFgtWFhYWC1YWFhYLVhYWFgtWFhYWFhYWFhYWFhYXG4gKi9cblxuY29uc3QgYnl0ZVRvSGV4ID0gW107XG5cbmZvciAobGV0IGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgYnl0ZVRvSGV4LnB1c2goKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnNsaWNlKDEpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVuc2FmZVN0cmluZ2lmeShhcnIsIG9mZnNldCA9IDApIHtcbiAgLy8gTm90ZTogQmUgY2FyZWZ1bCBlZGl0aW5nIHRoaXMgY29kZSEgIEl0J3MgYmVlbiB0dW5lZCBmb3IgcGVyZm9ybWFuY2VcbiAgLy8gYW5kIHdvcmtzIGluIHdheXMgeW91IG1heSBub3QgZXhwZWN0LiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkL3B1bGwvNDM0XG4gIHJldHVybiBieXRlVG9IZXhbYXJyW29mZnNldCArIDBdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMV1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAyXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDNdXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA1XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDZdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgN11dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA4XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDldXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTBdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTFdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTJdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTNdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTRdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTVdXTtcbn1cblxuZnVuY3Rpb24gc3RyaW5naWZ5KGFyciwgb2Zmc2V0ID0gMCkge1xuICBjb25zdCB1dWlkID0gdW5zYWZlU3RyaW5naWZ5KGFyciwgb2Zmc2V0KTsgLy8gQ29uc2lzdGVuY3kgY2hlY2sgZm9yIHZhbGlkIFVVSUQuICBJZiB0aGlzIHRocm93cywgaXQncyBsaWtlbHkgZHVlIHRvIG9uZVxuICAvLyBvZiB0aGUgZm9sbG93aW5nOlxuICAvLyAtIE9uZSBvciBtb3JlIGlucHV0IGFycmF5IHZhbHVlcyBkb24ndCBtYXAgdG8gYSBoZXggb2N0ZXQgKGxlYWRpbmcgdG9cbiAgLy8gXCJ1bmRlZmluZWRcIiBpbiB0aGUgdXVpZClcbiAgLy8gLSBJbnZhbGlkIGlucHV0IHZhbHVlcyBmb3IgdGhlIFJGQyBgdmVyc2lvbmAgb3IgYHZhcmlhbnRgIGZpZWxkc1xuXG4gIGlmICghdmFsaWRhdGUodXVpZCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ1N0cmluZ2lmaWVkIFVVSUQgaXMgaW52YWxpZCcpO1xuICB9XG5cbiAgcmV0dXJuIHV1aWQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHN0cmluZ2lmeTsiXSwibmFtZXMiOlsidmFsaWRhdGUiLCJieXRlVG9IZXgiLCJpIiwicHVzaCIsInRvU3RyaW5nIiwic2xpY2UiLCJ1bnNhZmVTdHJpbmdpZnkiLCJhcnIiLCJvZmZzZXQiLCJzdHJpbmdpZnkiLCJ1dWlkIiwiVHlwZUVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/stringify.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/v4.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/v4.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _native_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./native.js */ \"(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/native.js\");\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rng.js */ \"(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stringify.js */ \"(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/stringify.js\");\n\n\n\nfunction v4(options, buf, offset) {\n    if (_native_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].randomUUID && !buf && !options) {\n        return _native_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    rnds[6] = rnds[6] & 0x0f | 0x40;\n    rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n    if (buf) {\n        offset = offset || 0;\n        for(let i = 0; i < 16; ++i){\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_2__.unsafeStringify)(rnds);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9tZXRhbWFzay1zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS92NC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWlDO0FBQ047QUFDc0I7QUFFakQsU0FBU0csR0FBR0MsT0FBTyxFQUFFQyxHQUFHLEVBQUVDLE1BQU07SUFDOUIsSUFBSU4sa0RBQU1BLENBQUNPLFVBQVUsSUFBSSxDQUFDRixPQUFPLENBQUNELFNBQVM7UUFDekMsT0FBT0osa0RBQU1BLENBQUNPLFVBQVU7SUFDMUI7SUFFQUgsVUFBVUEsV0FBVyxDQUFDO0lBQ3RCLE1BQU1JLE9BQU9KLFFBQVFLLE1BQU0sSUFBSSxDQUFDTCxRQUFRSCxHQUFHLElBQUlBLCtDQUFFLEtBQU0sZ0VBQWdFO0lBRXZITyxJQUFJLENBQUMsRUFBRSxHQUFHQSxJQUFJLENBQUMsRUFBRSxHQUFHLE9BQU87SUFDM0JBLElBQUksQ0FBQyxFQUFFLEdBQUdBLElBQUksQ0FBQyxFQUFFLEdBQUcsT0FBTyxNQUFNLG9DQUFvQztJQUVyRSxJQUFJSCxLQUFLO1FBQ1BDLFNBQVNBLFVBQVU7UUFFbkIsSUFBSyxJQUFJSSxJQUFJLEdBQUdBLElBQUksSUFBSSxFQUFFQSxFQUFHO1lBQzNCTCxHQUFHLENBQUNDLFNBQVNJLEVBQUUsR0FBR0YsSUFBSSxDQUFDRSxFQUFFO1FBQzNCO1FBRUEsT0FBT0w7SUFDVDtJQUVBLE9BQU9ILDhEQUFlQSxDQUFDTTtBQUN6QjtBQUVBLGlFQUFlTCxFQUFFQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29uaWMtc3dhcC8uL25vZGVfbW9kdWxlcy9Ac29sZmxhcmUtd2FsbGV0L21ldGFtYXNrLXNkay9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3Y0LmpzPzQyODAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG5hdGl2ZSBmcm9tICcuL25hdGl2ZS5qcyc7XG5pbXBvcnQgcm5nIGZyb20gJy4vcm5nLmpzJztcbmltcG9ydCB7IHVuc2FmZVN0cmluZ2lmeSB9IGZyb20gJy4vc3RyaW5naWZ5LmpzJztcblxuZnVuY3Rpb24gdjQob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgaWYgKG5hdGl2ZS5yYW5kb21VVUlEICYmICFidWYgJiYgIW9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmF0aXZlLnJhbmRvbVVVSUQoKTtcbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBjb25zdCBybmRzID0gb3B0aW9ucy5yYW5kb20gfHwgKG9wdGlvbnMucm5nIHx8IHJuZykoKTsgLy8gUGVyIDQuNCwgc2V0IGJpdHMgZm9yIHZlcnNpb24gYW5kIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYFxuXG4gIHJuZHNbNl0gPSBybmRzWzZdICYgMHgwZiB8IDB4NDA7XG4gIHJuZHNbOF0gPSBybmRzWzhdICYgMHgzZiB8IDB4ODA7IC8vIENvcHkgYnl0ZXMgdG8gYnVmZmVyLCBpZiBwcm92aWRlZFxuXG4gIGlmIChidWYpIHtcbiAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTY7ICsraSkge1xuICAgICAgYnVmW29mZnNldCArIGldID0gcm5kc1tpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gYnVmO1xuICB9XG5cbiAgcmV0dXJuIHVuc2FmZVN0cmluZ2lmeShybmRzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdjQ7Il0sIm5hbWVzIjpbIm5hdGl2ZSIsInJuZyIsInVuc2FmZVN0cmluZ2lmeSIsInY0Iiwib3B0aW9ucyIsImJ1ZiIsIm9mZnNldCIsInJhbmRvbVVVSUQiLCJybmRzIiwicmFuZG9tIiwiaSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/v4.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/validate.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/validate.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ \"(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/regex.js\");\n\nfunction validate(uuid) {\n    return typeof uuid === \"string\" && _regex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].test(uuid);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9tZXRhbWFzay1zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS92YWxpZGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQjtBQUUvQixTQUFTQyxTQUFTQyxJQUFJO0lBQ3BCLE9BQU8sT0FBT0EsU0FBUyxZQUFZRixpREFBS0EsQ0FBQ0csSUFBSSxDQUFDRDtBQUNoRDtBQUVBLGlFQUFlRCxRQUFRQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29uaWMtc3dhcC8uL25vZGVfbW9kdWxlcy9Ac29sZmxhcmUtd2FsbGV0L21ldGFtYXNrLXNkay9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3ZhbGlkYXRlLmpzP2RkZmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJFR0VYIGZyb20gJy4vcmVnZXguanMnO1xuXG5mdW5jdGlvbiB2YWxpZGF0ZSh1dWlkKSB7XG4gIHJldHVybiB0eXBlb2YgdXVpZCA9PT0gJ3N0cmluZycgJiYgUkVHRVgudGVzdCh1dWlkKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdmFsaWRhdGU7Il0sIm5hbWVzIjpbIlJFR0VYIiwidmFsaWRhdGUiLCJ1dWlkIiwidGVzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/uuid/dist/esm-node/validate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/adapters/WalletProvider.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/sdk/lib/esm/adapters/WalletProvider.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ \"(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_2__);\nvar __extends = undefined && undefined.__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __assign = undefined && undefined.__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = undefined && undefined.__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar __read = undefined && undefined.__read || function(o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);\n    } catch (error) {\n        e = {\n            error: error\n        };\n    } finally{\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        } finally{\n            if (e) throw e.error;\n        }\n    }\n    return ar;\n};\n\n\n\nvar Wallet = /** @class */ function(_super) {\n    __extends(Wallet, _super);\n    function Wallet(provider, network) {\n        var _this = _super.call(this) || this;\n        _this._handleMessage = function(e) {\n            if (_this._injectedProvider && e.source === window || e.origin === _this._providerUrl.origin && e.source === _this._popup) {\n                if (e.data.method === \"connected\") {\n                    var newPublicKey = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(e.data.params.publicKey);\n                    if (!_this._publicKey || !_this._publicKey.equals(newPublicKey)) {\n                        if (_this._publicKey && !_this._publicKey.equals(newPublicKey)) {\n                            _this._handleDisconnect();\n                        }\n                        _this._publicKey = newPublicKey;\n                        _this._autoApprove = !!e.data.params.autoApprove;\n                        _this.emit(\"connect\", _this._publicKey);\n                    }\n                } else if (e.data.method === \"disconnected\") {\n                    _this._handleDisconnect();\n                } else if (e.data.result || e.data.error) {\n                    if (_this._responsePromises.has(e.data.id)) {\n                        var _a = __read(_this._responsePromises.get(e.data.id), 2), resolve = _a[0], reject = _a[1];\n                        if (e.data.result) {\n                            resolve(e.data.result);\n                        } else {\n                            reject(new Error(e.data.error));\n                        }\n                    }\n                }\n            }\n        };\n        _this._handleConnect = function() {\n            if (!_this._handlerAdded) {\n                _this._handlerAdded = true;\n                window.addEventListener(\"message\", _this._handleMessage);\n                window.addEventListener(\"beforeunload\", _this.disconnect);\n            }\n            if (_this._injectedProvider) {\n                return new Promise(function(resolve) {\n                    _this._sendRequest(\"connect\", {});\n                    resolve();\n                });\n            } else {\n                window.name = \"parent\";\n                _this._popup = window.open(_this._providerUrl.toString(), \"_blank\", \"location,resizable,width=460,height=675\");\n                return new Promise(function(resolve) {\n                    _this.once(\"connect\", resolve);\n                });\n            }\n        };\n        _this._handleDisconnect = function() {\n            if (_this._handlerAdded) {\n                _this._handlerAdded = false;\n                window.removeEventListener(\"message\", _this._handleMessage);\n                window.removeEventListener(\"beforeunload\", _this.disconnect);\n            }\n            if (_this._publicKey) {\n                _this._publicKey = null;\n                _this.emit(\"disconnect\");\n            }\n            _this._responsePromises.forEach(function(_a, id) {\n                var _b = __read(_a, 2), resolve = _b[0], reject = _b[1];\n                _this._responsePromises.delete(id);\n                reject(\"Wallet disconnected\");\n            });\n        };\n        _this._sendRequest = function(method, params) {\n            return __awaiter(_this, void 0, void 0, function() {\n                var requestId;\n                var _this = this;\n                return __generator(this, function(_a) {\n                    if (method !== \"connect\" && !this.connected) {\n                        throw new Error(\"Wallet not connected\");\n                    }\n                    requestId = this._nextRequestId;\n                    ++this._nextRequestId;\n                    return [\n                        2 /*return*/ ,\n                        new Promise(function(resolve, reject) {\n                            _this._responsePromises.set(requestId, [\n                                resolve,\n                                reject\n                            ]);\n                            if (_this._injectedProvider) {\n                                _this._injectedProvider.postMessage({\n                                    jsonrpc: \"2.0\",\n                                    id: requestId,\n                                    method: method,\n                                    params: __assign({\n                                        network: _this._network\n                                    }, params)\n                                });\n                            } else {\n                                _this._popup.postMessage({\n                                    jsonrpc: \"2.0\",\n                                    id: requestId,\n                                    method: method,\n                                    params: params\n                                }, _this._providerUrl.origin);\n                                if (!_this.autoApprove) {\n                                    _this._popup.focus();\n                                }\n                            }\n                        })\n                    ];\n                });\n            });\n        };\n        _this.connect = function() {\n            if (_this._popup) {\n                _this._popup.close();\n            }\n            return _this._handleConnect();\n        };\n        _this.disconnect = function() {\n            return __awaiter(_this, void 0, void 0, function() {\n                return __generator(this, function(_a) {\n                    switch(_a.label){\n                        case 0:\n                            if (!this._injectedProvider) return [\n                                3 /*break*/ ,\n                                2\n                            ];\n                            return [\n                                4 /*yield*/ ,\n                                this._sendRequest(\"disconnect\", {})\n                            ];\n                        case 1:\n                            _a.sent();\n                            _a.label = 2;\n                        case 2:\n                            if (this._popup) {\n                                this._popup.close();\n                            }\n                            this._handleDisconnect();\n                            return [\n                                2 /*return*/ \n                            ];\n                    }\n                });\n            });\n        };\n        _this.sign = function(data, display) {\n            return __awaiter(_this, void 0, void 0, function() {\n                var response, signature, publicKey;\n                return __generator(this, function(_a) {\n                    switch(_a.label){\n                        case 0:\n                            if (!(data instanceof Uint8Array)) {\n                                throw new Error(\"Data must be an instance of Uint8Array\");\n                            }\n                            return [\n                                4 /*yield*/ ,\n                                this._sendRequest(\"sign\", {\n                                    data: data,\n                                    display: display\n                                })\n                            ];\n                        case 1:\n                            response = _a.sent();\n                            signature = bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(response.signature);\n                            publicKey = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(response.publicKey);\n                            return [\n                                2 /*return*/ ,\n                                {\n                                    signature: signature,\n                                    publicKey: publicKey\n                                }\n                            ];\n                    }\n                });\n            });\n        };\n        if (isInjectedProvider(provider)) {\n            _this._injectedProvider = provider;\n        } else if (isString(provider)) {\n            _this._providerUrl = new URL(provider);\n            _this._providerUrl.hash = new URLSearchParams({\n                origin: window.location.origin,\n                network: network\n            }).toString();\n        } else {\n            throw new Error(\"provider parameter must be an injected provider or a URL string.\");\n        }\n        _this._network = network;\n        _this._publicKey = null;\n        _this._autoApprove = false;\n        _this._popup = null;\n        _this._handlerAdded = false;\n        _this._nextRequestId = 1;\n        _this._responsePromises = new Map();\n        return _this;\n    }\n    Object.defineProperty(Wallet.prototype, \"publicKey\", {\n        get: function() {\n            return this._publicKey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Wallet.prototype, \"connected\", {\n        get: function() {\n            return this._publicKey !== null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Wallet.prototype, \"autoApprove\", {\n        get: function() {\n            return this._autoApprove;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Wallet;\n}(eventemitter3__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Wallet);\nfunction isString(a) {\n    return typeof a === \"string\";\n}\nfunction isInjectedProvider(a) {\n    return isObject(a) && isFunction(a.postMessage);\n}\nfunction isObject(a) {\n    return typeof a === \"object\" && a !== null;\n}\nfunction isFunction(a) {\n    return typeof a === \"function\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/adapters/WalletProvider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/adapters/base.js":
/*!********************************************************************!*\
  !*** ./node_modules/@solflare-wallet/sdk/lib/esm/adapters/base.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! eventemitter3 */ \"(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/eventemitter3/index.mjs\");\nvar __extends = undefined && undefined.__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\n\nvar WalletAdapter = /** @class */ function(_super) {\n    __extends(WalletAdapter, _super);\n    function WalletAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return WalletAdapter;\n}(eventemitter3__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WalletAdapter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9zZGsvbGliL2VzbS9hZGFwdGVycy9iYXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBSUEsWUFBWSxTQUFLLElBQUksU0FBSSxDQUFDQSxTQUFTLElBQUs7SUFDeEMsSUFBSUMsZ0JBQWdCLFNBQVVDLENBQUMsRUFBRUMsQ0FBQztRQUM5QkYsZ0JBQWdCRyxPQUFPQyxjQUFjLElBQ2hDO1lBQUVDLFdBQVcsRUFBRTtRQUFDLGNBQWFDLFNBQVMsU0FBVUwsQ0FBQyxFQUFFQyxDQUFDO1lBQUlELEVBQUVJLFNBQVMsR0FBR0g7UUFBRyxLQUMxRSxTQUFVRCxDQUFDLEVBQUVDLENBQUM7WUFBSSxJQUFLLElBQUlLLEtBQUtMLEVBQUcsSUFBSUMsT0FBT0ssU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ1IsR0FBR0ssSUFBSU4sQ0FBQyxDQUFDTSxFQUFFLEdBQUdMLENBQUMsQ0FBQ0ssRUFBRTtRQUFFO1FBQ3BHLE9BQU9QLGNBQWNDLEdBQUdDO0lBQzVCO0lBQ0EsT0FBTyxTQUFVRCxDQUFDLEVBQUVDLENBQUM7UUFDakIsSUFBSSxPQUFPQSxNQUFNLGNBQWNBLE1BQU0sTUFDakMsTUFBTSxJQUFJUyxVQUFVLHlCQUF5QkMsT0FBT1YsS0FBSztRQUM3REYsY0FBY0MsR0FBR0M7UUFDakIsU0FBU1c7WUFBTyxJQUFJLENBQUNDLFdBQVcsR0FBR2I7UUFBRztRQUN0Q0EsRUFBRU8sU0FBUyxHQUFHTixNQUFNLE9BQU9DLE9BQU9ZLE1BQU0sQ0FBQ2IsS0FBTVcsQ0FBQUEsR0FBR0wsU0FBUyxHQUFHTixFQUFFTSxTQUFTLEVBQUUsSUFBSUssSUFBRztJQUN0RjtBQUNKO0FBQ3lDO0FBQ3pDLElBQUlJLGdCQUFnQixXQUFXLEdBQUksU0FBVUMsTUFBTTtJQUMvQ25CLFVBQVVrQixlQUFlQztJQUN6QixTQUFTRDtRQUNMLE9BQU9DLFdBQVcsUUFBUUEsT0FBT0MsS0FBSyxDQUFDLElBQUksRUFBRUMsY0FBYyxJQUFJO0lBQ25FO0lBQ0EsT0FBT0g7QUFDWCxFQUFFRCxxREFBWUE7QUFDZCxpRUFBZUMsYUFBYUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbmljLXN3YXAvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9zZGsvbGliL2VzbS9hZGFwdGVycy9iYXNlLmpzPzBiNDQiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fZXh0ZW5kcyA9ICh0aGlzICYmIHRoaXMuX19leHRlbmRzKSB8fCAoZnVuY3Rpb24gKCkge1xuICAgIHZhciBleHRlbmRTdGF0aWNzID0gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxuICAgICAgICAgICAgKHsgX19wcm90b19fOiBbXSB9IGluc3RhbmNlb2YgQXJyYXkgJiYgZnVuY3Rpb24gKGQsIGIpIHsgZC5fX3Byb3RvX18gPSBiOyB9KSB8fFxuICAgICAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcbiAgICAgICAgcmV0dXJuIGV4dGVuZFN0YXRpY3MoZCwgYik7XG4gICAgfTtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGQsIGIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBiICE9PSBcImZ1bmN0aW9uXCIgJiYgYiAhPT0gbnVsbClcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcbiAgICAgICAgZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XG4gICAgICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcbiAgICB9O1xufSkoKTtcbmltcG9ydCBFdmVudEVtaXR0ZXIgZnJvbSAnZXZlbnRlbWl0dGVyMyc7XG52YXIgV2FsbGV0QWRhcHRlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uIChfc3VwZXIpIHtcbiAgICBfX2V4dGVuZHMoV2FsbGV0QWRhcHRlciwgX3N1cGVyKTtcbiAgICBmdW5jdGlvbiBXYWxsZXRBZGFwdGVyKCkge1xuICAgICAgICByZXR1cm4gX3N1cGVyICE9PSBudWxsICYmIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIHx8IHRoaXM7XG4gICAgfVxuICAgIHJldHVybiBXYWxsZXRBZGFwdGVyO1xufShFdmVudEVtaXR0ZXIpKTtcbmV4cG9ydCBkZWZhdWx0IFdhbGxldEFkYXB0ZXI7XG4iXSwibmFtZXMiOlsiX19leHRlbmRzIiwiZXh0ZW5kU3RhdGljcyIsImQiLCJiIiwiT2JqZWN0Iiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJBcnJheSIsInAiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJUeXBlRXJyb3IiLCJTdHJpbmciLCJfXyIsImNvbnN0cnVjdG9yIiwiY3JlYXRlIiwiRXZlbnRFbWl0dGVyIiwiV2FsbGV0QWRhcHRlciIsIl9zdXBlciIsImFwcGx5IiwiYXJndW1lbnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/adapters/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/adapters/iframe.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@solflare-wallet/sdk/lib/esm/adapters/iframe.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base */ \"(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/adapters/base.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_2__);\nvar __extends = undefined && undefined.__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __assign = undefined && undefined.__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = undefined && undefined.__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\n\n\n\n\nvar IframeAdapter = /** @class */ function(_super) {\n    __extends(IframeAdapter, _super);\n    function IframeAdapter(iframe, publicKey) {\n        var _this = this;\n        var _a;\n        _this = _super.call(this) || this;\n        _this._publicKey = null;\n        _this._messageHandlers = {};\n        _this.handleMessage = function(data) {\n            if (_this._messageHandlers[data.id]) {\n                var _a = _this._messageHandlers[data.id], resolve = _a.resolve, reject = _a.reject;\n                delete _this._messageHandlers[data.id];\n                if (data.error) {\n                    reject(data.error);\n                } else {\n                    resolve(data.result);\n                }\n            }\n        };\n        _this._sendMessage = function(data) {\n            if (!_this.connected) {\n                throw new Error(\"Wallet not connected\");\n            }\n            return new Promise(function(resolve, reject) {\n                var _a, _b;\n                var messageId = (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n                _this._messageHandlers[messageId] = {\n                    resolve: resolve,\n                    reject: reject\n                };\n                (_b = (_a = _this._iframe) === null || _a === void 0 ? void 0 : _a.contentWindow) === null || _b === void 0 ? void 0 : _b.postMessage({\n                    channel: \"solflareWalletAdapterToIframe\",\n                    data: __assign({\n                        id: messageId\n                    }, data)\n                }, \"*\");\n            });\n        };\n        _this._iframe = iframe;\n        _this._publicKey = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.PublicKey((_a = publicKey === null || publicKey === void 0 ? void 0 : publicKey.toString) === null || _a === void 0 ? void 0 : _a.call(publicKey));\n        return _this;\n    }\n    Object.defineProperty(IframeAdapter.prototype, \"publicKey\", {\n        get: function() {\n            return this._publicKey || null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IframeAdapter.prototype, \"connected\", {\n        get: function() {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IframeAdapter.prototype.connect = function() {\n        return __awaiter(this, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                return [\n                    2 /*return*/ \n                ];\n            });\n        });\n    };\n    IframeAdapter.prototype.disconnect = function() {\n        return __awaiter(this, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this._sendMessage({\n                                method: \"disconnect\"\n                            })\n                        ];\n                    case 1:\n                        _a.sent();\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    IframeAdapter.prototype.signTransaction = function(transaction) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function() {\n            var signedTransaction, e_1;\n            return __generator(this, function(_b) {\n                switch(_b.label){\n                    case 0:\n                        if (!this.connected) {\n                            throw new Error(\"Wallet not connected\");\n                        }\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([\n                            1,\n                            3,\n                            ,\n                            4\n                        ]);\n                        return [\n                            4 /*yield*/ ,\n                            this._sendMessage({\n                                method: \"signTransaction\",\n                                params: {\n                                    transaction: bs58__WEBPACK_IMPORTED_MODULE_2___default().encode(transaction)\n                                }\n                            })\n                        ];\n                    case 2:\n                        signedTransaction = _b.sent();\n                        return [\n                            2 /*return*/ ,\n                            bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(signedTransaction)\n                        ];\n                    case 3:\n                        e_1 = _b.sent();\n                        throw new Error(((_a = e_1 === null || e_1 === void 0 ? void 0 : e_1.toString) === null || _a === void 0 ? void 0 : _a.call(e_1)) || \"Failed to sign transaction\");\n                    case 4:\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    IframeAdapter.prototype.signAllTransactions = function(transactions) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function() {\n            var signedTransactions, e_2;\n            return __generator(this, function(_b) {\n                switch(_b.label){\n                    case 0:\n                        if (!this.connected) {\n                            throw new Error(\"Wallet not connected\");\n                        }\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([\n                            1,\n                            3,\n                            ,\n                            4\n                        ]);\n                        return [\n                            4 /*yield*/ ,\n                            this._sendMessage({\n                                method: \"signAllTransactions\",\n                                params: {\n                                    transactions: transactions.map(function(transaction) {\n                                        return bs58__WEBPACK_IMPORTED_MODULE_2___default().encode(transaction);\n                                    })\n                                }\n                            })\n                        ];\n                    case 2:\n                        signedTransactions = _b.sent();\n                        return [\n                            2 /*return*/ ,\n                            signedTransactions.map(function(transaction) {\n                                return bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(transaction);\n                            })\n                        ];\n                    case 3:\n                        e_2 = _b.sent();\n                        throw new Error(((_a = e_2 === null || e_2 === void 0 ? void 0 : e_2.toString) === null || _a === void 0 ? void 0 : _a.call(e_2)) || \"Failed to sign transactions\");\n                    case 4:\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    IframeAdapter.prototype.signAndSendTransaction = function(transaction, options) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function() {\n            var result, e_3;\n            return __generator(this, function(_b) {\n                switch(_b.label){\n                    case 0:\n                        if (!this.connected) {\n                            throw new Error(\"Wallet not connected\");\n                        }\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([\n                            1,\n                            3,\n                            ,\n                            4\n                        ]);\n                        return [\n                            4 /*yield*/ ,\n                            this._sendMessage({\n                                method: \"signAndSendTransaction\",\n                                params: {\n                                    transaction: bs58__WEBPACK_IMPORTED_MODULE_2___default().encode(transaction),\n                                    options: options\n                                }\n                            })\n                        ];\n                    case 2:\n                        result = _b.sent();\n                        return [\n                            2 /*return*/ ,\n                            result\n                        ];\n                    case 3:\n                        e_3 = _b.sent();\n                        throw new Error(((_a = e_3 === null || e_3 === void 0 ? void 0 : e_3.toString) === null || _a === void 0 ? void 0 : _a.call(e_3)) || \"Failed to sign and send transaction\");\n                    case 4:\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    IframeAdapter.prototype.signMessage = function(data, display) {\n        var _a;\n        if (display === void 0) {\n            display = \"hex\";\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var result, e_4;\n            return __generator(this, function(_b) {\n                switch(_b.label){\n                    case 0:\n                        if (!this.connected) {\n                            throw new Error(\"Wallet not connected\");\n                        }\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([\n                            1,\n                            3,\n                            ,\n                            4\n                        ]);\n                        return [\n                            4 /*yield*/ ,\n                            this._sendMessage({\n                                method: \"signMessage\",\n                                params: {\n                                    data: data,\n                                    display: display\n                                }\n                            })\n                        ];\n                    case 2:\n                        result = _b.sent();\n                        return [\n                            2 /*return*/ ,\n                            Uint8Array.from(bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(result))\n                        ];\n                    case 3:\n                        e_4 = _b.sent();\n                        throw new Error(((_a = e_4 === null || e_4 === void 0 ? void 0 : e_4.toString) === null || _a === void 0 ? void 0 : _a.call(e_4)) || \"Failed to sign message\");\n                    case 4:\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    return IframeAdapter;\n}(_base__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (IframeAdapter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/adapters/iframe.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/adapters/web.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@solflare-wallet/sdk/lib/esm/adapters/web.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base */ \"(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/adapters/base.js\");\n/* harmony import */ var _WalletProvider__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./WalletProvider */ \"(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/adapters/WalletProvider.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bs58 */ \"(ssr)/./node_modules/bs58/index.js\");\n/* harmony import */ var bs58__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bs58__WEBPACK_IMPORTED_MODULE_2__);\nvar __extends = undefined && undefined.__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = undefined && undefined.__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\n\n\n\nvar WebAdapter = /** @class */ function(_super) {\n    __extends(WebAdapter, _super);\n    // @ts-ignore\n    function WebAdapter(iframe, network, provider) {\n        var _this = _super.call(this) || this;\n        _this._instance = null;\n        // @ts-ignore\n        _this.handleMessage = function(data) {\n        // nothing to do here\n        };\n        _this._sendRequest = function(method, params) {\n            return __awaiter(_this, void 0, void 0, function() {\n                var _a, _b;\n                return __generator(this, function(_c) {\n                    switch(_c.label){\n                        case 0:\n                            if (!((_a = this._instance) === null || _a === void 0 ? void 0 : _a.sendRequest)) return [\n                                3 /*break*/ ,\n                                2\n                            ];\n                            return [\n                                4 /*yield*/ ,\n                                this._instance.sendRequest(method, params)\n                            ];\n                        case 1:\n                            return [\n                                2 /*return*/ ,\n                                _c.sent()\n                            ];\n                        case 2:\n                            if (!((_b = this._instance) === null || _b === void 0 ? void 0 : _b._sendRequest)) return [\n                                3 /*break*/ ,\n                                4\n                            ];\n                            return [\n                                4 /*yield*/ ,\n                                this._instance._sendRequest(method, params)\n                            ];\n                        case 3:\n                            return [\n                                2 /*return*/ ,\n                                _c.sent()\n                            ];\n                        case 4:\n                            throw new Error(\"Unsupported version of `@project-serum/sol-wallet-adapter`\");\n                    }\n                });\n            });\n        };\n        _this._handleConnect = function() {\n            _this.emit(\"connect\");\n        };\n        _this._handleDisconnect = function() {\n            window.clearInterval(_this._pollTimer);\n            _this.emit(\"disconnect\");\n        };\n        _this._network = network;\n        _this._provider = provider;\n        return _this;\n    }\n    Object.defineProperty(WebAdapter.prototype, \"publicKey\", {\n        get: function() {\n            return this._instance.publicKey || null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebAdapter.prototype, \"connected\", {\n        get: function() {\n            return this._instance.connected || false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebAdapter.prototype.connect = function() {\n        return __awaiter(this, void 0, void 0, function() {\n            var _this = this;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        this._instance = new _WalletProvider__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this._provider, this._network);\n                        this._instance.on(\"connect\", this._handleConnect);\n                        this._instance.on(\"disconnect\", this._handleDisconnect);\n                        this._pollTimer = window.setInterval(function() {\n                            var _a, _b;\n                            // @ts-ignore\n                            if (((_b = (_a = _this._instance) === null || _a === void 0 ? void 0 : _a._popup) === null || _b === void 0 ? void 0 : _b.closed) !== false) {\n                                _this._handleDisconnect();\n                            }\n                        }, 200);\n                        return [\n                            4 /*yield*/ ,\n                            this._instance.connect()\n                        ];\n                    case 1:\n                        _a.sent();\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    WebAdapter.prototype.disconnect = function() {\n        return __awaiter(this, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (!this.connected) {\n                            throw new Error(\"Wallet not connected\");\n                        }\n                        this._instance.removeAllListeners(\"connect\");\n                        this._instance.removeAllListeners(\"disconnect\");\n                        return [\n                            4 /*yield*/ ,\n                            this._instance.disconnect()\n                        ];\n                    case 1:\n                        _a.sent();\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    WebAdapter.prototype.signTransaction = function(transaction) {\n        return __awaiter(this, void 0, void 0, function() {\n            var signedTransaction;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (!this.connected) {\n                            throw new Error(\"Wallet not connected\");\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            this._sendRequest(\"signTransactionV2\", {\n                                transaction: bs58__WEBPACK_IMPORTED_MODULE_2___default().encode(transaction)\n                            })\n                        ];\n                    case 1:\n                        signedTransaction = _a.sent().transaction;\n                        return [\n                            2 /*return*/ ,\n                            bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(signedTransaction)\n                        ];\n                }\n            });\n        });\n    };\n    WebAdapter.prototype.signAllTransactions = function(transactions) {\n        return __awaiter(this, void 0, void 0, function() {\n            var signedTransactions;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (!this.connected) {\n                            throw new Error(\"Wallet not connected\");\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            this._sendRequest(\"signAllTransactionsV2\", {\n                                transactions: transactions.map(function(transaction) {\n                                    return bs58__WEBPACK_IMPORTED_MODULE_2___default().encode(transaction);\n                                })\n                            })\n                        ];\n                    case 1:\n                        signedTransactions = _a.sent().transactions;\n                        return [\n                            2 /*return*/ ,\n                            signedTransactions.map(function(transaction) {\n                                return bs58__WEBPACK_IMPORTED_MODULE_2___default().decode(transaction);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    WebAdapter.prototype.signAndSendTransaction = function(transaction, options) {\n        return __awaiter(this, void 0, void 0, function() {\n            var response;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (!this.connected) {\n                            throw new Error(\"Wallet not connected\");\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            this._sendRequest(\"signAndSendTransaction\", {\n                                transaction: bs58__WEBPACK_IMPORTED_MODULE_2___default().encode(transaction),\n                                options: options\n                            })\n                        ];\n                    case 1:\n                        response = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            response.signature\n                        ];\n                }\n            });\n        });\n    };\n    WebAdapter.prototype.signMessage = function(data, display) {\n        if (display === void 0) {\n            display = \"hex\";\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            var signature;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (!this.connected) {\n                            throw new Error(\"Wallet not connected\");\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            this._instance.sign(data, display)\n                        ];\n                    case 1:\n                        signature = _a.sent().signature;\n                        return [\n                            2 /*return*/ ,\n                            Uint8Array.from(signature)\n                        ];\n                }\n            });\n        });\n    };\n    return WebAdapter;\n}(_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WebAdapter);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/adapters/web.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@solflare-wallet/sdk/lib/esm/index.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @solana/web3.js */ \"(ssr)/./node_modules/@solana/web3.js/lib/index.esm.js\");\n/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! eventemitter3 */ \"(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/eventemitter3/index.mjs\");\n/* harmony import */ var _adapters_web__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./adapters/web */ \"(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/adapters/web.js\");\n/* harmony import */ var _adapters_iframe__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./adapters/iframe */ \"(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/adapters/iframe.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/utils.js\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./version */ \"(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/version.js\");\nvar __extends = undefined && undefined.__extends || function() {\n    var extendStatics = function(d, b) {\n        extendStatics = Object.setPrototypeOf || ({\n            __proto__: []\n        }) instanceof Array && function(d, b) {\n            d.__proto__ = b;\n        } || function(d, b) {\n            for(var p in b)if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n        };\n        return extendStatics(d, b);\n    };\n    return function(d, b) {\n        if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() {\n            this.constructor = d;\n        }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n}();\nvar __assign = undefined && undefined.__assign || function() {\n    __assign = Object.assign || function(t) {\n        for(var s, i = 1, n = arguments.length; i < n; i++){\n            s = arguments[i];\n            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = undefined && undefined.__awaiter || function(thisArg, _arguments, P, generator) {\n    function adopt(value) {\n        return value instanceof P ? value : new P(function(resolve) {\n            resolve(value);\n        });\n    }\n    return new (P || (P = Promise))(function(resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = undefined && undefined.__generator || function(thisArg, body) {\n    var _ = {\n        label: 0,\n        sent: function() {\n            if (t[0] & 1) throw t[1];\n            return t[1];\n        },\n        trys: [],\n        ops: []\n    }, f, y, t, g;\n    return g = {\n        next: verb(0),\n        \"throw\": verb(1),\n        \"return\": verb(2)\n    }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() {\n        return this;\n    }), g;\n    function verb(n) {\n        return function(v) {\n            return step([\n                n,\n                v\n            ]);\n        };\n    }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while(g && (g = 0, op[0] && (_ = 0)), _)try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [\n                op[0] & 2,\n                t.value\n            ];\n            switch(op[0]){\n                case 0:\n                case 1:\n                    t = op;\n                    break;\n                case 4:\n                    _.label++;\n                    return {\n                        value: op[1],\n                        done: false\n                    };\n                case 5:\n                    _.label++;\n                    y = op[1];\n                    op = [\n                        0\n                    ];\n                    continue;\n                case 7:\n                    op = _.ops.pop();\n                    _.trys.pop();\n                    continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n                        _ = 0;\n                        continue;\n                    }\n                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n                        _.label = op[1];\n                        break;\n                    }\n                    if (op[0] === 6 && _.label < t[1]) {\n                        _.label = t[1];\n                        t = op;\n                        break;\n                    }\n                    if (t && _.label < t[2]) {\n                        _.label = t[2];\n                        _.ops.push(op);\n                        break;\n                    }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop();\n                    continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) {\n            op = [\n                6,\n                e\n            ];\n            y = 0;\n        } finally{\n            f = t = 0;\n        }\n        if (op[0] & 5) throw op[1];\n        return {\n            value: op[0] ? op[1] : void 0,\n            done: true\n        };\n    }\n};\nvar __values = undefined && undefined.__values || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function() {\n            if (o && i >= o.length) o = void 0;\n            return {\n                value: o && o[i++],\n                done: !o\n            };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\n\n\n\n\n\nvar Solflare = /** @class */ function(_super) {\n    __extends(Solflare, _super);\n    function Solflare(config) {\n        var _this = _super.call(this) || this;\n        _this._network = \"mainnet-beta\";\n        _this._provider = null;\n        _this._iframeParams = {};\n        _this._adapterInstance = null;\n        _this._element = null;\n        _this._iframe = null;\n        _this._connectHandler = null;\n        _this._flutterHandlerInterval = null;\n        _this._handleEvent = function(event) {\n            var _a, _b, _c, _d;\n            switch(event.type){\n                case \"connect_native_web\":\n                    {\n                        _this._collapseIframe();\n                        _this._adapterInstance = new _adapters_web__WEBPACK_IMPORTED_MODULE_2__[\"default\"](_this._iframe, _this._network, ((_a = event.data) === null || _a === void 0 ? void 0 : _a.provider) || _this._provider || \"https://solflare.com/provider\");\n                        _this._adapterInstance.on(\"connect\", _this._webConnected);\n                        _this._adapterInstance.on(\"disconnect\", _this._webDisconnected);\n                        _this._adapterInstance.connect();\n                        _this._setPreferredAdapter(\"native_web\");\n                        return;\n                    }\n                case \"connect\":\n                    {\n                        _this._collapseIframe();\n                        _this._adapterInstance = new _adapters_iframe__WEBPACK_IMPORTED_MODULE_3__[\"default\"](_this._iframe, ((_b = event.data) === null || _b === void 0 ? void 0 : _b.publicKey) || \"\");\n                        _this._adapterInstance.connect();\n                        _this._setPreferredAdapter((_c = event.data) === null || _c === void 0 ? void 0 : _c.adapter);\n                        if (_this._connectHandler) {\n                            _this._connectHandler.resolve();\n                            _this._connectHandler = null;\n                        }\n                        _this.emit(\"connect\", _this.publicKey);\n                        return;\n                    }\n                case \"disconnect\":\n                    {\n                        if (_this._connectHandler) {\n                            _this._connectHandler.reject();\n                            _this._connectHandler = null;\n                        }\n                        _this._disconnected();\n                        _this.emit(\"disconnect\");\n                        return;\n                    }\n                case \"accountChanged\":\n                    {\n                        if ((_d = event.data) === null || _d === void 0 ? void 0 : _d.publicKey) {\n                            _this._adapterInstance = new _adapters_iframe__WEBPACK_IMPORTED_MODULE_3__[\"default\"](_this._iframe, event.data.publicKey);\n                            _this._adapterInstance.connect();\n                            _this.emit(\"accountChanged\", _this.publicKey);\n                        } else {\n                            _this.emit(\"accountChanged\", undefined);\n                        }\n                        return;\n                    }\n                // legacy event, use resize message type instead\n                case \"collapse\":\n                    {\n                        _this._collapseIframe();\n                        return;\n                    }\n                default:\n                    {\n                        return;\n                    }\n            }\n        };\n        _this._handleResize = function(data) {\n            if (data.resizeMode === \"full\") {\n                if (data.params.mode === \"fullscreen\") {\n                    _this._expandIframe();\n                } else if (data.params.mode === \"hide\") {\n                    _this._collapseIframe();\n                }\n            } else if (data.resizeMode === \"coordinates\") {\n                if (_this._iframe) {\n                    _this._iframe.style.top = isFinite(data.params.top) ? \"\".concat(data.params.top, \"px\") : \"\";\n                    _this._iframe.style.bottom = isFinite(data.params.bottom) ? \"\".concat(data.params.bottom, \"px\") : \"\";\n                    _this._iframe.style.left = isFinite(data.params.left) ? \"\".concat(data.params.left, \"px\") : \"\";\n                    _this._iframe.style.right = isFinite(data.params.right) ? \"\".concat(data.params.right, \"px\") : \"\";\n                    _this._iframe.style.width = isFinite(data.params.width) ? \"\".concat(data.params.width, \"px\") : data.params.width;\n                    _this._iframe.style.height = isFinite(data.params.height) ? \"\".concat(data.params.height, \"px\") : data.params.height;\n                }\n            }\n        };\n        _this._handleMessage = function(event) {\n            var _a;\n            if (((_a = event.data) === null || _a === void 0 ? void 0 : _a.channel) !== \"solflareIframeToWalletAdapter\") {\n                return;\n            }\n            var data = event.data.data || {};\n            if (data.type === \"event\") {\n                _this._handleEvent(data.event);\n            } else if (data.type === \"resize\") {\n                _this._handleResize(data);\n            } else if (data.type === \"response\") {\n                if (_this._adapterInstance) {\n                    _this._adapterInstance.handleMessage(data);\n                }\n            }\n        };\n        _this._removeElement = function() {\n            if (_this._flutterHandlerInterval !== null) {\n                clearInterval(_this._flutterHandlerInterval);\n                _this._flutterHandlerInterval = null;\n            }\n            if (_this._element) {\n                _this._element.remove();\n                _this._element = null;\n            }\n        };\n        _this._removeDanglingElements = function() {\n            var e_1, _a;\n            var elements = document.getElementsByClassName(\"solflare-wallet-adapter-iframe\");\n            try {\n                for(var elements_1 = __values(elements), elements_1_1 = elements_1.next(); !elements_1_1.done; elements_1_1 = elements_1.next()){\n                    var element = elements_1_1.value;\n                    if (element.parentElement) {\n                        element.remove();\n                    }\n                }\n            } catch (e_1_1) {\n                e_1 = {\n                    error: e_1_1\n                };\n            } finally{\n                try {\n                    if (elements_1_1 && !elements_1_1.done && (_a = elements_1.return)) _a.call(elements_1);\n                } finally{\n                    if (e_1) throw e_1.error;\n                }\n            }\n        };\n        _this._injectElement = function() {\n            _this._removeElement();\n            _this._removeDanglingElements();\n            var params = __assign(__assign({}, _this._iframeParams), {\n                cluster: _this._network || \"mainnet-beta\",\n                origin: window.location.origin || \"\",\n                title: document.title || \"\",\n                version: 1,\n                sdkVersion: _version__WEBPACK_IMPORTED_MODULE_5__.VERSION || \"unknown\"\n            });\n            var preferredAdapter = _this._getPreferredAdapter();\n            if (preferredAdapter) {\n                params.adapter = preferredAdapter;\n            }\n            if (_this._provider) {\n                params.provider = _this._provider;\n            }\n            var queryString = Object.keys(params).map(function(key) {\n                return \"\".concat(key, \"=\").concat(encodeURIComponent(params[key]));\n            }).join(\"&\");\n            var iframeUrl = \"\".concat(Solflare.IFRAME_URL, \"?\").concat(queryString);\n            _this._element = document.createElement(\"div\");\n            _this._element.className = \"solflare-wallet-adapter-iframe\";\n            _this._element.innerHTML = \"\\n      <iframe src='\".concat(iframeUrl, \"' referrerPolicy='strict-origin-when-cross-origin' style='position: fixed; top: 0; bottom: 0; left: 0; right: 0; width: 100%; height: 100%; border: none; border-radius: 0; z-index: 99999; color-scheme: auto;' allowtransparency='true'></iframe>\\n    \");\n            document.body.appendChild(_this._element);\n            _this._iframe = _this._element.querySelector(\"iframe\");\n            // @ts-ignore\n            window.fromFlutter = _this._handleMobileMessage;\n            _this._flutterHandlerInterval = setInterval(function() {\n                // @ts-ignore\n                window.fromFlutter = _this._handleMobileMessage;\n            }, 100);\n            window.addEventListener(\"message\", _this._handleMessage, false);\n        };\n        _this._collapseIframe = function() {\n            if (_this._iframe) {\n                _this._iframe.style.top = \"\";\n                _this._iframe.style.right = \"\";\n                _this._iframe.style.height = \"2px\";\n                _this._iframe.style.width = \"2px\";\n            }\n        };\n        _this._expandIframe = function() {\n            if (_this._iframe) {\n                _this._iframe.style.top = \"0px\";\n                _this._iframe.style.bottom = \"0px\";\n                _this._iframe.style.left = \"0px\";\n                _this._iframe.style.right = \"0px\";\n                _this._iframe.style.width = \"100%\";\n                _this._iframe.style.height = \"100%\";\n            }\n        };\n        _this._getPreferredAdapter = function() {\n            if (localStorage) {\n                return localStorage.getItem(\"solflarePreferredWalletAdapter\") || null;\n            }\n            return null;\n        };\n        _this._setPreferredAdapter = function(adapter) {\n            if (localStorage && adapter) {\n                localStorage.setItem(\"solflarePreferredWalletAdapter\", adapter);\n            }\n        };\n        _this._clearPreferredAdapter = function() {\n            if (localStorage) {\n                localStorage.removeItem(\"solflarePreferredWalletAdapter\");\n            }\n        };\n        _this._webConnected = function() {\n            if (_this._connectHandler) {\n                _this._connectHandler.resolve();\n                _this._connectHandler = null;\n            }\n            _this.emit(\"connect\", _this.publicKey);\n        };\n        _this._webDisconnected = function() {\n            if (_this._connectHandler) {\n                _this._connectHandler.reject();\n                _this._connectHandler = null;\n            }\n            _this._disconnected();\n            _this.emit(\"disconnect\");\n        };\n        _this._disconnected = function() {\n            window.removeEventListener(\"message\", _this._handleMessage, false);\n            _this._removeElement();\n            _this._clearPreferredAdapter();\n            _this._adapterInstance = null;\n        };\n        _this._handleMobileMessage = function(data) {\n            var _a, _b;\n            (_b = (_a = _this._iframe) === null || _a === void 0 ? void 0 : _a.contentWindow) === null || _b === void 0 ? void 0 : _b.postMessage({\n                channel: \"solflareMobileToIframe\",\n                data: data\n            }, \"*\");\n        };\n        if (config === null || config === void 0 ? void 0 : config.network) {\n            _this._network = config === null || config === void 0 ? void 0 : config.network;\n        }\n        if (config === null || config === void 0 ? void 0 : config.provider) {\n            _this._provider = config === null || config === void 0 ? void 0 : config.provider;\n        }\n        if (config === null || config === void 0 ? void 0 : config.params) {\n            _this._iframeParams = __assign({}, config === null || config === void 0 ? void 0 : config.params);\n        }\n        return _this;\n    }\n    Object.defineProperty(Solflare.prototype, \"publicKey\", {\n        get: function() {\n            var _a;\n            return ((_a = this._adapterInstance) === null || _a === void 0 ? void 0 : _a.publicKey) || null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Solflare.prototype, \"isConnected\", {\n        get: function() {\n            var _a;\n            return !!((_a = this._adapterInstance) === null || _a === void 0 ? void 0 : _a.connected);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Solflare.prototype, \"connected\", {\n        get: function() {\n            return this.isConnected;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Solflare.prototype, \"autoApprove\", {\n        get: function() {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Solflare.prototype.connect = function() {\n        return __awaiter(this, void 0, void 0, function() {\n            var _this = this;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (this.connected) {\n                            return [\n                                2 /*return*/ \n                            ];\n                        }\n                        this._injectElement();\n                        return [\n                            4 /*yield*/ ,\n                            new Promise(function(resolve, reject) {\n                                _this._connectHandler = {\n                                    resolve: resolve,\n                                    reject: reject\n                                };\n                            })\n                        ];\n                    case 1:\n                        _a.sent();\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    Solflare.prototype.disconnect = function() {\n        return __awaiter(this, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (!this._adapterInstance) {\n                            return [\n                                2 /*return*/ \n                            ];\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            this._adapterInstance.disconnect()\n                        ];\n                    case 1:\n                        _a.sent();\n                        this._disconnected();\n                        this.emit(\"disconnect\");\n                        return [\n                            2 /*return*/ \n                        ];\n                }\n            });\n        });\n    };\n    Solflare.prototype.signTransaction = function(transaction) {\n        return __awaiter(this, void 0, void 0, function() {\n            var serializedTransaction, signedTransaction;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (!this.connected) {\n                            throw new Error(\"Wallet not connected\");\n                        }\n                        serializedTransaction = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.isLegacyTransactionInstance)(transaction) ? Uint8Array.from(transaction.serialize({\n                            verifySignatures: false,\n                            requireAllSignatures: false\n                        })) : transaction.serialize();\n                        return [\n                            4 /*yield*/ ,\n                            this._adapterInstance.signTransaction(serializedTransaction)\n                        ];\n                    case 1:\n                        signedTransaction = _a.sent();\n                        return [\n                            2 /*return*/ ,\n                            (0,_utils__WEBPACK_IMPORTED_MODULE_4__.isLegacyTransactionInstance)(transaction) ? _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction.from(signedTransaction) : _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.VersionedTransaction.deserialize(signedTransaction)\n                        ];\n                }\n            });\n        });\n    };\n    Solflare.prototype.signAllTransactions = function(transactions) {\n        return __awaiter(this, void 0, void 0, function() {\n            var serializedTransactions, signedTransactions;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (!this.connected) {\n                            throw new Error(\"Wallet not connected\");\n                        }\n                        serializedTransactions = transactions.map(function(transaction) {\n                            return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.isLegacyTransactionInstance)(transaction) ? Uint8Array.from(transaction.serialize({\n                                verifySignatures: false,\n                                requireAllSignatures: false\n                            })) : transaction.serialize();\n                        });\n                        return [\n                            4 /*yield*/ ,\n                            this._adapterInstance.signAllTransactions(serializedTransactions)\n                        ];\n                    case 1:\n                        signedTransactions = _a.sent();\n                        if (signedTransactions.length !== transactions.length) {\n                            throw new Error(\"Failed to sign all transactions\");\n                        }\n                        return [\n                            2 /*return*/ ,\n                            signedTransactions.map(function(signedTransaction, index) {\n                                return (0,_utils__WEBPACK_IMPORTED_MODULE_4__.isLegacyTransactionInstance)(transactions[index]) ? _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.Transaction.from(signedTransaction) : _solana_web3_js__WEBPACK_IMPORTED_MODULE_0__.VersionedTransaction.deserialize(signedTransaction);\n                            })\n                        ];\n                }\n            });\n        });\n    };\n    Solflare.prototype.signAndSendTransaction = function(transaction, options) {\n        return __awaiter(this, void 0, void 0, function() {\n            var serializedTransaction;\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (!this.connected) {\n                            throw new Error(\"Wallet not connected\");\n                        }\n                        serializedTransaction = (0,_utils__WEBPACK_IMPORTED_MODULE_4__.isLegacyTransactionInstance)(transaction) ? transaction.serialize({\n                            verifySignatures: false,\n                            requireAllSignatures: false\n                        }) : transaction.serialize();\n                        return [\n                            4 /*yield*/ ,\n                            this._adapterInstance.signAndSendTransaction(serializedTransaction, options)\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    Solflare.prototype.signMessage = function(data, display) {\n        if (display === void 0) {\n            display = \"utf8\";\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        if (!this.connected) {\n                            throw new Error(\"Wallet not connected\");\n                        }\n                        return [\n                            4 /*yield*/ ,\n                            this._adapterInstance.signMessage(data, display)\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    Solflare.prototype.sign = function(data, display) {\n        if (display === void 0) {\n            display = \"utf8\";\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            return __generator(this, function(_a) {\n                switch(_a.label){\n                    case 0:\n                        return [\n                            4 /*yield*/ ,\n                            this.signMessage(data, display)\n                        ];\n                    case 1:\n                        return [\n                            2 /*return*/ ,\n                            _a.sent()\n                        ];\n                }\n            });\n        });\n    };\n    Solflare.prototype.detectWallet = function(timeout) {\n        var _a;\n        if (timeout === void 0) {\n            timeout = 10;\n        }\n        return __awaiter(this, void 0, void 0, function() {\n            return __generator(this, function(_b) {\n                if (window.SolflareApp || ((_a = window.solflare) === null || _a === void 0 ? void 0 : _a.isSolflare)) {\n                    return [\n                        2 /*return*/ ,\n                        true\n                    ];\n                }\n                return [\n                    2 /*return*/ ,\n                    new Promise(function(resolve) {\n                        var pollInterval, pollTimeout;\n                        pollInterval = setInterval(function() {\n                            var _a;\n                            if (window.SolflareApp || ((_a = window.solflare) === null || _a === void 0 ? void 0 : _a.isSolflare)) {\n                                clearInterval(pollInterval);\n                                clearTimeout(pollTimeout);\n                                resolve(true);\n                            }\n                        }, 500);\n                        pollTimeout = setTimeout(function() {\n                            clearInterval(pollInterval);\n                            resolve(false);\n                        }, timeout * 1000);\n                    })\n                ];\n            });\n        });\n    };\n    Solflare.IFRAME_URL = \"https://connect.solflare.com/\";\n    return Solflare;\n}(eventemitter3__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Solflare);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/utils.js":
/*!************************************************************!*\
  !*** ./node_modules/@solflare-wallet/sdk/lib/esm/utils.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isLegacyTransactionInstance: () => (/* binding */ isLegacyTransactionInstance)\n/* harmony export */ });\nfunction isLegacyTransactionInstance(transaction) {\n    return transaction.version === undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9zZGsvbGliL2VzbS91dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sU0FBU0EsNEJBQTRCQyxXQUFXO0lBQ25ELE9BQU9BLFlBQVlDLE9BQU8sS0FBS0M7QUFDbkMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb25pYy1zd2FwLy4vbm9kZV9tb2R1bGVzL0Bzb2xmbGFyZS13YWxsZXQvc2RrL2xpYi9lc20vdXRpbHMuanM/NjI0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNMZWdhY3lUcmFuc2FjdGlvbkluc3RhbmNlKHRyYW5zYWN0aW9uKSB7XG4gICAgcmV0dXJuIHRyYW5zYWN0aW9uLnZlcnNpb24gPT09IHVuZGVmaW5lZDtcbn1cbiJdLCJuYW1lcyI6WyJpc0xlZ2FjeVRyYW5zYWN0aW9uSW5zdGFuY2UiLCJ0cmFuc2FjdGlvbiIsInZlcnNpb24iLCJ1bmRlZmluZWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/version.js":
/*!**************************************************************!*\
  !*** ./node_modules/@solflare-wallet/sdk/lib/esm/version.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VERSION: () => (/* binding */ VERSION)\n/* harmony export */ });\nvar VERSION = \"1.4.2\";\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9zZGsvbGliL2VzbS92ZXJzaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyxJQUFJQSxVQUFVLFFBQVEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb25pYy1zd2FwLy4vbm9kZV9tb2R1bGVzL0Bzb2xmbGFyZS13YWxsZXQvc2RrL2xpYi9lc20vdmVyc2lvbi5qcz9jZjI4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgVkVSU0lPTiA9IFwiMS40LjJcIjtcbiJdLCJuYW1lcyI6WyJWRVJTSU9OIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/sdk/lib/esm/version.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/eventemitter3/index.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/sdk/node_modules/eventemitter3/index.js ***!
  \*******************************************************************************/
/***/ ((module) => {

eval("\nvar has = Object.prototype.hasOwnProperty, prefix = \"~\";\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */ function Events() {}\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n    Events.prototype = Object.create(null);\n    //\n    // This hack is needed because the `__proto__` property is still inherited in\n    // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n    //\n    if (!new Events().__proto__) prefix = false;\n}\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */ function EE(fn, context, once) {\n    this.fn = fn;\n    this.context = context;\n    this.once = once || false;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */ function addListener(emitter, event, fn, context, once) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"The listener must be a function\");\n    }\n    var listener = new EE(fn, context || emitter, once), evt = prefix ? prefix + event : event;\n    if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n    else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n    else emitter._events[evt] = [\n        emitter._events[evt],\n        listener\n    ];\n    return emitter;\n}\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */ function clearEvent(emitter, evt) {\n    if (--emitter._eventsCount === 0) emitter._events = new Events();\n    else delete emitter._events[evt];\n}\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */ function EventEmitter() {\n    this._events = new Events();\n    this._eventsCount = 0;\n}\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */ EventEmitter.prototype.eventNames = function eventNames() {\n    var names = [], events, name;\n    if (this._eventsCount === 0) return names;\n    for(name in events = this._events){\n        if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n    }\n    if (Object.getOwnPropertySymbols) {\n        return names.concat(Object.getOwnPropertySymbols(events));\n    }\n    return names;\n};\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */ EventEmitter.prototype.listeners = function listeners(event) {\n    var evt = prefix ? prefix + event : event, handlers = this._events[evt];\n    if (!handlers) return [];\n    if (handlers.fn) return [\n        handlers.fn\n    ];\n    for(var i = 0, l = handlers.length, ee = new Array(l); i < l; i++){\n        ee[i] = handlers[i].fn;\n    }\n    return ee;\n};\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */ EventEmitter.prototype.listenerCount = function listenerCount(event) {\n    var evt = prefix ? prefix + event : event, listeners = this._events[evt];\n    if (!listeners) return 0;\n    if (listeners.fn) return 1;\n    return listeners.length;\n};\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */ EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n    var evt = prefix ? prefix + event : event;\n    if (!this._events[evt]) return false;\n    var listeners = this._events[evt], len = arguments.length, args, i;\n    if (listeners.fn) {\n        if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n        switch(len){\n            case 1:\n                return listeners.fn.call(listeners.context), true;\n            case 2:\n                return listeners.fn.call(listeners.context, a1), true;\n            case 3:\n                return listeners.fn.call(listeners.context, a1, a2), true;\n            case 4:\n                return listeners.fn.call(listeners.context, a1, a2, a3), true;\n            case 5:\n                return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n            case 6:\n                return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n        }\n        for(i = 1, args = new Array(len - 1); i < len; i++){\n            args[i - 1] = arguments[i];\n        }\n        listeners.fn.apply(listeners.context, args);\n    } else {\n        var length = listeners.length, j;\n        for(i = 0; i < length; i++){\n            if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n            switch(len){\n                case 1:\n                    listeners[i].fn.call(listeners[i].context);\n                    break;\n                case 2:\n                    listeners[i].fn.call(listeners[i].context, a1);\n                    break;\n                case 3:\n                    listeners[i].fn.call(listeners[i].context, a1, a2);\n                    break;\n                case 4:\n                    listeners[i].fn.call(listeners[i].context, a1, a2, a3);\n                    break;\n                default:\n                    if (!args) for(j = 1, args = new Array(len - 1); j < len; j++){\n                        args[j - 1] = arguments[j];\n                    }\n                    listeners[i].fn.apply(listeners[i].context, args);\n            }\n        }\n    }\n    return true;\n};\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */ EventEmitter.prototype.on = function on(event, fn, context) {\n    return addListener(this, event, fn, context, false);\n};\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */ EventEmitter.prototype.once = function once(event, fn, context) {\n    return addListener(this, event, fn, context, true);\n};\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */ EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n    var evt = prefix ? prefix + event : event;\n    if (!this._events[evt]) return this;\n    if (!fn) {\n        clearEvent(this, evt);\n        return this;\n    }\n    var listeners = this._events[evt];\n    if (listeners.fn) {\n        if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) {\n            clearEvent(this, evt);\n        }\n    } else {\n        for(var i = 0, events = [], length = listeners.length; i < length; i++){\n            if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) {\n                events.push(listeners[i]);\n            }\n        }\n        //\n        // Reset the array, or remove it completely if we have no more listeners.\n        //\n        if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n        else clearEvent(this, evt);\n    }\n    return this;\n};\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */ EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n    var evt;\n    if (event) {\n        evt = prefix ? prefix + event : event;\n        if (this._events[evt]) clearEvent(this, evt);\n    } else {\n        this._events = new Events();\n        this._eventsCount = 0;\n    }\n    return this;\n};\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n//\n// Expose the module.\n//\nif (true) {\n    module.exports = EventEmitter;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/eventemitter3/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/native.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/native.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    randomUUID: (crypto__WEBPACK_IMPORTED_MODULE_0___default().randomUUID)\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS9uYXRpdmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRCO0FBQzVCLGlFQUFlO0lBQ2JDLFlBQVlELDBEQUFpQjtBQUMvQixDQUFDLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb25pYy1zd2FwLy4vbm9kZV9tb2R1bGVzL0Bzb2xmbGFyZS13YWxsZXQvc2RrL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvbmF0aXZlLmpzPzZhOTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyeXB0byBmcm9tICdjcnlwdG8nO1xuZXhwb3J0IGRlZmF1bHQge1xuICByYW5kb21VVUlEOiBjcnlwdG8ucmFuZG9tVVVJRFxufTsiXSwibmFtZXMiOlsiY3J5cHRvIiwicmFuZG9tVVVJRCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/native.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/regex.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/regex.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS9yZWdleC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsaUVBQWUscUhBQXFILEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zb25pYy1zd2FwLy4vbm9kZV9tb2R1bGVzL0Bzb2xmbGFyZS13YWxsZXQvc2RrL25vZGVfbW9kdWxlcy91dWlkL2Rpc3QvZXNtLW5vZGUvcmVnZXguanM/ZGVhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCAvXig/OlswLTlhLWZdezh9LVswLTlhLWZdezR9LVsxLTVdWzAtOWEtZl17M30tWzg5YWJdWzAtOWEtZl17M30tWzAtOWEtZl17MTJ9fDAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCkkL2k7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/regex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/rng.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/rng.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rng)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\nlet poolPtr = rnds8Pool.length;\nfunction rng() {\n    if (poolPtr > rnds8Pool.length - 16) {\n        crypto__WEBPACK_IMPORTED_MODULE_0___default().randomFillSync(rnds8Pool);\n        poolPtr = 0;\n    }\n    return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS9ybmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTRCO0FBQzVCLE1BQU1DLFlBQVksSUFBSUMsV0FBVyxNQUFNLHFDQUFxQztBQUU1RSxJQUFJQyxVQUFVRixVQUFVRyxNQUFNO0FBQ2YsU0FBU0M7SUFDdEIsSUFBSUYsVUFBVUYsVUFBVUcsTUFBTSxHQUFHLElBQUk7UUFDbkNKLDREQUFxQixDQUFDQztRQUN0QkUsVUFBVTtJQUNaO0lBRUEsT0FBT0YsVUFBVU0sS0FBSyxDQUFDSixTQUFTQSxXQUFXO0FBQzdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29uaWMtc3dhcC8uL25vZGVfbW9kdWxlcy9Ac29sZmxhcmUtd2FsbGV0L3Nkay9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3JuZy5qcz82Njg5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjcnlwdG8gZnJvbSAnY3J5cHRvJztcbmNvbnN0IHJuZHM4UG9vbCA9IG5ldyBVaW50OEFycmF5KDI1Nik7IC8vICMgb2YgcmFuZG9tIHZhbHVlcyB0byBwcmUtYWxsb2NhdGVcblxubGV0IHBvb2xQdHIgPSBybmRzOFBvb2wubGVuZ3RoO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcm5nKCkge1xuICBpZiAocG9vbFB0ciA+IHJuZHM4UG9vbC5sZW5ndGggLSAxNikge1xuICAgIGNyeXB0by5yYW5kb21GaWxsU3luYyhybmRzOFBvb2wpO1xuICAgIHBvb2xQdHIgPSAwO1xuICB9XG5cbiAgcmV0dXJuIHJuZHM4UG9vbC5zbGljZShwb29sUHRyLCBwb29sUHRyICs9IDE2KTtcbn0iXSwibmFtZXMiOlsiY3J5cHRvIiwicm5kczhQb29sIiwiVWludDhBcnJheSIsInBvb2xQdHIiLCJsZW5ndGgiLCJybmciLCJyYW5kb21GaWxsU3luYyIsInNsaWNlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/rng.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/stringify.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/stringify.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   unsafeStringify: () => (/* binding */ unsafeStringify)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/validate.js\");\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */ const byteToHex = [];\nfor(let i = 0; i < 256; ++i){\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nfunction unsafeStringify(arr, offset = 0) {\n    // Note: Be careful editing this code!  It's been tuned for performance\n    // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n    return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + \"-\" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + \"-\" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + \"-\" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + \"-\" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n    // of the following:\n    // - One or more input array values don't map to a hex octet (leading to\n    // \"undefined\" in the uuid)\n    // - Invalid input values for the RFC `version` or `variant` fields\n    if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n        throw TypeError(\"Stringified UUID is invalid\");\n    }\n    return uuid;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS9zdHJpbmdpZnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFDO0FBQ3JDOzs7Q0FHQyxHQUVELE1BQU1DLFlBQVksRUFBRTtBQUVwQixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSSxLQUFLLEVBQUVBLEVBQUc7SUFDNUJELFVBQVVFLElBQUksQ0FBQyxDQUFDRCxJQUFJLEtBQUksRUFBR0UsUUFBUSxDQUFDLElBQUlDLEtBQUssQ0FBQztBQUNoRDtBQUVPLFNBQVNDLGdCQUFnQkMsR0FBRyxFQUFFQyxTQUFTLENBQUM7SUFDN0MsdUVBQXVFO0lBQ3ZFLG9GQUFvRjtJQUNwRixPQUFPUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxFQUFFLENBQUMsR0FBR1AsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsRUFBRSxDQUFDLEdBQUdQLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEVBQUUsQ0FBQyxHQUFHUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxFQUFFLENBQUMsR0FBRyxNQUFNUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxFQUFFLENBQUMsR0FBR1AsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsRUFBRSxDQUFDLEdBQUcsTUFBTVAsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsRUFBRSxDQUFDLEdBQUdQLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEVBQUUsQ0FBQyxHQUFHLE1BQU1QLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEVBQUUsQ0FBQyxHQUFHUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxFQUFFLENBQUMsR0FBRyxNQUFNUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxHQUFHLENBQUMsR0FBR1AsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsR0FBRyxDQUFDLEdBQUdQLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEdBQUcsQ0FBQyxHQUFHUCxTQUFTLENBQUNNLEdBQUcsQ0FBQ0MsU0FBUyxHQUFHLENBQUMsR0FBR1AsU0FBUyxDQUFDTSxHQUFHLENBQUNDLFNBQVMsR0FBRyxDQUFDLEdBQUdQLFNBQVMsQ0FBQ00sR0FBRyxDQUFDQyxTQUFTLEdBQUcsQ0FBQztBQUNwZjtBQUVBLFNBQVNDLFVBQVVGLEdBQUcsRUFBRUMsU0FBUyxDQUFDO0lBQ2hDLE1BQU1FLE9BQU9KLGdCQUFnQkMsS0FBS0MsU0FBUyw0RUFBNEU7SUFDdkgsb0JBQW9CO0lBQ3BCLHdFQUF3RTtJQUN4RSwyQkFBMkI7SUFDM0IsbUVBQW1FO0lBRW5FLElBQUksQ0FBQ1Isd0RBQVFBLENBQUNVLE9BQU87UUFDbkIsTUFBTUMsVUFBVTtJQUNsQjtJQUVBLE9BQU9EO0FBQ1Q7QUFFQSxpRUFBZUQsU0FBU0EsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbmljLXN3YXAvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS9zdHJpbmdpZnkuanM/ZWUxNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdmFsaWRhdGUgZnJvbSAnLi92YWxpZGF0ZS5qcyc7XG4vKipcbiAqIENvbnZlcnQgYXJyYXkgb2YgMTYgYnl0ZSB2YWx1ZXMgdG8gVVVJRCBzdHJpbmcgZm9ybWF0IG9mIHRoZSBmb3JtOlxuICogWFhYWFhYWFgtWFhYWC1YWFhYLVhYWFgtWFhYWFhYWFhYWFhYXG4gKi9cblxuY29uc3QgYnl0ZVRvSGV4ID0gW107XG5cbmZvciAobGV0IGkgPSAwOyBpIDwgMjU2OyArK2kpIHtcbiAgYnl0ZVRvSGV4LnB1c2goKGkgKyAweDEwMCkudG9TdHJpbmcoMTYpLnNsaWNlKDEpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVuc2FmZVN0cmluZ2lmeShhcnIsIG9mZnNldCA9IDApIHtcbiAgLy8gTm90ZTogQmUgY2FyZWZ1bCBlZGl0aW5nIHRoaXMgY29kZSEgIEl0J3MgYmVlbiB0dW5lZCBmb3IgcGVyZm9ybWFuY2VcbiAgLy8gYW5kIHdvcmtzIGluIHdheXMgeW91IG1heSBub3QgZXhwZWN0LiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3V1aWRqcy91dWlkL3B1bGwvNDM0XG4gIHJldHVybiBieXRlVG9IZXhbYXJyW29mZnNldCArIDBdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMV1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyAyXV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDNdXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgNF1dICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA1XV0gKyAnLScgKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDZdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgN11dICsgJy0nICsgYnl0ZVRvSGV4W2FycltvZmZzZXQgKyA4XV0gKyBieXRlVG9IZXhbYXJyW29mZnNldCArIDldXSArICctJyArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTBdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTFdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTJdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTNdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTRdXSArIGJ5dGVUb0hleFthcnJbb2Zmc2V0ICsgMTVdXTtcbn1cblxuZnVuY3Rpb24gc3RyaW5naWZ5KGFyciwgb2Zmc2V0ID0gMCkge1xuICBjb25zdCB1dWlkID0gdW5zYWZlU3RyaW5naWZ5KGFyciwgb2Zmc2V0KTsgLy8gQ29uc2lzdGVuY3kgY2hlY2sgZm9yIHZhbGlkIFVVSUQuICBJZiB0aGlzIHRocm93cywgaXQncyBsaWtlbHkgZHVlIHRvIG9uZVxuICAvLyBvZiB0aGUgZm9sbG93aW5nOlxuICAvLyAtIE9uZSBvciBtb3JlIGlucHV0IGFycmF5IHZhbHVlcyBkb24ndCBtYXAgdG8gYSBoZXggb2N0ZXQgKGxlYWRpbmcgdG9cbiAgLy8gXCJ1bmRlZmluZWRcIiBpbiB0aGUgdXVpZClcbiAgLy8gLSBJbnZhbGlkIGlucHV0IHZhbHVlcyBmb3IgdGhlIFJGQyBgdmVyc2lvbmAgb3IgYHZhcmlhbnRgIGZpZWxkc1xuXG4gIGlmICghdmFsaWRhdGUodXVpZCkpIHtcbiAgICB0aHJvdyBUeXBlRXJyb3IoJ1N0cmluZ2lmaWVkIFVVSUQgaXMgaW52YWxpZCcpO1xuICB9XG5cbiAgcmV0dXJuIHV1aWQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IHN0cmluZ2lmeTsiXSwibmFtZXMiOlsidmFsaWRhdGUiLCJieXRlVG9IZXgiLCJpIiwicHVzaCIsInRvU3RyaW5nIiwic2xpY2UiLCJ1bnNhZmVTdHJpbmdpZnkiLCJhcnIiLCJvZmZzZXQiLCJzdHJpbmdpZnkiLCJ1dWlkIiwiVHlwZUVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/stringify.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/v4.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/v4.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _native_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./native.js */ \"(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/native.js\");\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rng.js */ \"(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stringify.js */ \"(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/stringify.js\");\n\n\n\nfunction v4(options, buf, offset) {\n    if (_native_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].randomUUID && !buf && !options) {\n        return _native_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    rnds[6] = rnds[6] & 0x0f | 0x40;\n    rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n    if (buf) {\n        offset = offset || 0;\n        for(let i = 0; i < 16; ++i){\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_2__.unsafeStringify)(rnds);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS92NC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWlDO0FBQ047QUFDc0I7QUFFakQsU0FBU0csR0FBR0MsT0FBTyxFQUFFQyxHQUFHLEVBQUVDLE1BQU07SUFDOUIsSUFBSU4sa0RBQU1BLENBQUNPLFVBQVUsSUFBSSxDQUFDRixPQUFPLENBQUNELFNBQVM7UUFDekMsT0FBT0osa0RBQU1BLENBQUNPLFVBQVU7SUFDMUI7SUFFQUgsVUFBVUEsV0FBVyxDQUFDO0lBQ3RCLE1BQU1JLE9BQU9KLFFBQVFLLE1BQU0sSUFBSSxDQUFDTCxRQUFRSCxHQUFHLElBQUlBLCtDQUFFLEtBQU0sZ0VBQWdFO0lBRXZITyxJQUFJLENBQUMsRUFBRSxHQUFHQSxJQUFJLENBQUMsRUFBRSxHQUFHLE9BQU87SUFDM0JBLElBQUksQ0FBQyxFQUFFLEdBQUdBLElBQUksQ0FBQyxFQUFFLEdBQUcsT0FBTyxNQUFNLG9DQUFvQztJQUVyRSxJQUFJSCxLQUFLO1FBQ1BDLFNBQVNBLFVBQVU7UUFFbkIsSUFBSyxJQUFJSSxJQUFJLEdBQUdBLElBQUksSUFBSSxFQUFFQSxFQUFHO1lBQzNCTCxHQUFHLENBQUNDLFNBQVNJLEVBQUUsR0FBR0YsSUFBSSxDQUFDRSxFQUFFO1FBQzNCO1FBRUEsT0FBT0w7SUFDVDtJQUVBLE9BQU9ILDhEQUFlQSxDQUFDTTtBQUN6QjtBQUVBLGlFQUFlTCxFQUFFQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29uaWMtc3dhcC8uL25vZGVfbW9kdWxlcy9Ac29sZmxhcmUtd2FsbGV0L3Nkay9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3Y0LmpzPzgzYjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG5hdGl2ZSBmcm9tICcuL25hdGl2ZS5qcyc7XG5pbXBvcnQgcm5nIGZyb20gJy4vcm5nLmpzJztcbmltcG9ydCB7IHVuc2FmZVN0cmluZ2lmeSB9IGZyb20gJy4vc3RyaW5naWZ5LmpzJztcblxuZnVuY3Rpb24gdjQob3B0aW9ucywgYnVmLCBvZmZzZXQpIHtcbiAgaWYgKG5hdGl2ZS5yYW5kb21VVUlEICYmICFidWYgJiYgIW9wdGlvbnMpIHtcbiAgICByZXR1cm4gbmF0aXZlLnJhbmRvbVVVSUQoKTtcbiAgfVxuXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBjb25zdCBybmRzID0gb3B0aW9ucy5yYW5kb20gfHwgKG9wdGlvbnMucm5nIHx8IHJuZykoKTsgLy8gUGVyIDQuNCwgc2V0IGJpdHMgZm9yIHZlcnNpb24gYW5kIGBjbG9ja19zZXFfaGlfYW5kX3Jlc2VydmVkYFxuXG4gIHJuZHNbNl0gPSBybmRzWzZdICYgMHgwZiB8IDB4NDA7XG4gIHJuZHNbOF0gPSBybmRzWzhdICYgMHgzZiB8IDB4ODA7IC8vIENvcHkgYnl0ZXMgdG8gYnVmZmVyLCBpZiBwcm92aWRlZFxuXG4gIGlmIChidWYpIHtcbiAgICBvZmZzZXQgPSBvZmZzZXQgfHwgMDtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgMTY7ICsraSkge1xuICAgICAgYnVmW29mZnNldCArIGldID0gcm5kc1tpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gYnVmO1xuICB9XG5cbiAgcmV0dXJuIHVuc2FmZVN0cmluZ2lmeShybmRzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdjQ7Il0sIm5hbWVzIjpbIm5hdGl2ZSIsInJuZyIsInVuc2FmZVN0cmluZ2lmeSIsInY0Iiwib3B0aW9ucyIsImJ1ZiIsIm9mZnNldCIsInJhbmRvbVVVSUQiLCJybmRzIiwicmFuZG9tIiwiaSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/v4.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/validate.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/validate.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ \"(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/regex.js\");\n\nfunction validate(uuid) {\n    return typeof uuid === \"string\" && _regex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].test(uuid);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9zZGsvbm9kZV9tb2R1bGVzL3V1aWQvZGlzdC9lc20tbm9kZS92YWxpZGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQjtBQUUvQixTQUFTQyxTQUFTQyxJQUFJO0lBQ3BCLE9BQU8sT0FBT0EsU0FBUyxZQUFZRixpREFBS0EsQ0FBQ0csSUFBSSxDQUFDRDtBQUNoRDtBQUVBLGlFQUFlRCxRQUFRQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc29uaWMtc3dhcC8uL25vZGVfbW9kdWxlcy9Ac29sZmxhcmUtd2FsbGV0L3Nkay9ub2RlX21vZHVsZXMvdXVpZC9kaXN0L2VzbS1ub2RlL3ZhbGlkYXRlLmpzPzQ1ZWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJFR0VYIGZyb20gJy4vcmVnZXguanMnO1xuXG5mdW5jdGlvbiB2YWxpZGF0ZSh1dWlkKSB7XG4gIHJldHVybiB0eXBlb2YgdXVpZCA9PT0gJ3N0cmluZycgJiYgUkVHRVgudGVzdCh1dWlkKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgdmFsaWRhdGU7Il0sIm5hbWVzIjpbIlJFR0VYIiwidmFsaWRhdGUiLCJ1dWlkIiwidGVzdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/uuid/dist/esm-node/validate.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/eventemitter3/index.mjs":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/metamask-sdk/node_modules/eventemitter3/index.mjs ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventEmitter: () => (/* reexport default export from named module */ _index_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/eventemitter3/index.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_index_js__WEBPACK_IMPORTED_MODULE_0__);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9tZXRhbWFzay1zZGsvbm9kZV9tb2R1bGVzL2V2ZW50ZW1pdHRlcjMvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUVkO0FBQ3ZCLGlFQUFlQSxzQ0FBWUEsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbmljLXN3YXAvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9tZXRhbWFzay1zZGsvbm9kZV9tb2R1bGVzL2V2ZW50ZW1pdHRlcjMvaW5kZXgubWpzPzNhYzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV2ZW50RW1pdHRlciBmcm9tICcuL2luZGV4LmpzJ1xuXG5leHBvcnQgeyBFdmVudEVtaXR0ZXIgfVxuZXhwb3J0IGRlZmF1bHQgRXZlbnRFbWl0dGVyXG4iXSwibmFtZXMiOlsiRXZlbnRFbWl0dGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/metamask-sdk/node_modules/eventemitter3/index.mjs\n");

/***/ }),

/***/ "(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/eventemitter3/index.mjs":
/*!********************************************************************************!*\
  !*** ./node_modules/@solflare-wallet/sdk/node_modules/eventemitter3/index.mjs ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventEmitter: () => (/* reexport default export from named module */ _index_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/eventemitter3/index.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_index_js__WEBPACK_IMPORTED_MODULE_0__);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9zZGsvbm9kZV9tb2R1bGVzL2V2ZW50ZW1pdHRlcjMvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxQztBQUVkO0FBQ3ZCLGlFQUFlQSxzQ0FBWUEsRUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NvbmljLXN3YXAvLi9ub2RlX21vZHVsZXMvQHNvbGZsYXJlLXdhbGxldC9zZGsvbm9kZV9tb2R1bGVzL2V2ZW50ZW1pdHRlcjMvaW5kZXgubWpzP2ZmN2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEV2ZW50RW1pdHRlciBmcm9tICcuL2luZGV4LmpzJ1xuXG5leHBvcnQgeyBFdmVudEVtaXR0ZXIgfVxuZXhwb3J0IGRlZmF1bHQgRXZlbnRFbWl0dGVyXG4iXSwibmFtZXMiOlsiRXZlbnRFbWl0dGVyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@solflare-wallet/sdk/node_modules/eventemitter3/index.mjs\n");

/***/ })

};
;